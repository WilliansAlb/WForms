// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: src/Analizadores/Lexer.flex

package Analizadores;
import java_cup.runtime.Symbol;

// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
public class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;
  public static final int CONSULTA = 2;
  public static final int STRING = 4;
  public static final int RESTRICCION = 6;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\37\u0100\1\u0200\267\u0100\10\u0300\u1020\u0100";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\2\1\2\2\1\1\22\0\1\3\1\4\1\5"+
    "\1\6\1\7\2\6\1\10\1\11\1\12\2\13\1\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\5\24"+
    "\1\25\1\26\1\13\1\27\1\30\1\31\1\13\1\6"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61"+
    "\1\62\1\63\1\64\1\0\1\65\1\0\1\66\1\0"+
    "\1\67\1\70\1\71\1\72\1\73\1\74\1\62\1\75"+
    "\1\76\1\62\1\77\1\100\1\101\1\102\1\103\1\104"+
    "\1\62\1\105\1\106\1\107\1\110\1\62\1\111\3\62"+
    "\1\112\1\113\1\114\1\13\6\0\1\2\72\0\100\115"+
    "\u0119\0\1\116\16\0\2\2\326\0\u0100\2";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[1024];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\1\1\1\2\1\3\1\1\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\2\5\1\12\1\13\1\14\1\15"+
    "\1\2\1\16\1\17\2\5\1\20\1\5\1\21\2\22"+
    "\26\5\1\23\1\24\1\25\1\26\1\27\2\22\1\10"+
    "\1\30\1\11\3\5\1\31\1\32\1\33\2\5\1\34"+
    "\1\5\1\0\1\5\1\22\1\24\21\5\1\35\6\5"+
    "\1\36\6\5\1\36\6\5\1\37\1\40\1\41\2\5"+
    "\1\42\3\5\1\22\1\24\45\5\1\43\3\5\1\37"+
    "\1\44\1\45\3\5\1\22\1\24\3\5\1\46\35\5"+
    "\1\47\6\5\1\50\1\5\1\24\3\5\1\51\3\5"+
    "\1\52\1\5\1\53\7\5\1\54\26\5\1\24\4\5"+
    "\1\55\12\5\1\56\1\57\4\5\1\60\7\5\1\61"+
    "\5\5\1\24\14\5\1\62\14\5\1\0\1\5\1\63"+
    "\1\0\3\5\1\64\4\5\1\65\15\5\1\66\1\5"+
    "\1\67\1\5\1\24\2\5\1\0\13\5\1\70\15\5"+
    "\1\71\1\24\4\5\1\0\2\5\1\72\1\5\1\73"+
    "\1\74\1\5\1\75\10\5\1\76\6\5\1\0\4\5"+
    "\1\0\3\5\1\62\20\5\1\24\4\5\1\0\17\5"+
    "\1\77\4\5\1\24\4\5\1\0\1\100\3\5\1\101"+
    "\6\5\1\102\7\5\1\24\1\103\2\5\1\104\1\0"+
    "\1\5\1\105\7\5\1\106\5\5\1\107\2\5\1\110"+
    "\2\5\1\0\1\111\1\112\1\5\1\113\13\5\1\114"+
    "\1\5\1\0\4\5\1\115\4\5\1\116\2\5\1\117"+
    "\7\5\1\120\2\5\1\121\3\5\1\122\5\5\1\123"+
    "\1\124\4\5\1\125\1\126\1\127\2\5\1\130\1\131";

  private static int [] zzUnpackAction() {
    int [] result = new int[577];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\117\0\236\0\355\0\u013c\0\u018b\0\u01da\0\u0229"+
    "\0\u013c\0\u0278\0\u013c\0\u0278\0\u02c7\0\u013c\0\u0316\0\u0365"+
    "\0\u013c\0\u013c\0\u013c\0\u013c\0\u03b4\0\u013c\0\u0403\0\u0452"+
    "\0\u04a1\0\u013c\0\u04f0\0\u013c\0\u053f\0\u058e\0\u05dd\0\u062c"+
    "\0\u067b\0\u06ca\0\u0719\0\u0768\0\u07b7\0\u0806\0\u0855\0\u08a4"+
    "\0\u08f3\0\u0942\0\u0991\0\u09e0\0\u0a2f\0\u0a7e\0\u0acd\0\u0b1c"+
    "\0\u0b6b\0\u0bba\0\u0c09\0\u0c58\0\u018b\0\u0ca7\0\u013c\0\u013c"+
    "\0\u013c\0\u0cf6\0\u0d45\0\u0d94\0\u013c\0\u0de3\0\u0e32\0\u0e81"+
    "\0\u0ed0\0\u013c\0\u013c\0\u013c\0\u0f1f\0\u0f6e\0\u013c\0\u0fbd"+
    "\0\u0ca7\0\u100c\0\u105b\0\u10aa\0\u10f9\0\u1148\0\u1197\0\u11e6"+
    "\0\u1235\0\u1284\0\u12d3\0\u1322\0\u1371\0\u13c0\0\u140f\0\u145e"+
    "\0\u14ad\0\u14fc\0\u154b\0\u159a\0\u15e9\0\u07b7\0\u1638\0\u1687"+
    "\0\u16d6\0\u1725\0\u1774\0\u17c3\0\u1812\0\u1861\0\u18b0\0\u18ff"+
    "\0\u194e\0\u199d\0\u19ec\0\u07b7\0\u1a3b\0\u1a8a\0\u1ad9\0\u1b28"+
    "\0\u1b77\0\u1bc6\0\u1c15\0\u013c\0\u013c\0\u1c64\0\u1cb3\0\u0278"+
    "\0\u1d02\0\u1d51\0\u1da0\0\u1def\0\u1e3e\0\u1e8d\0\u1edc\0\u1f2b"+
    "\0\u1f7a\0\u1fc9\0\u2018\0\u2067\0\u20b6\0\u2105\0\u2154\0\u21a3"+
    "\0\u21f2\0\u2241\0\u2290\0\u22df\0\u232e\0\u237d\0\u23cc\0\u241b"+
    "\0\u246a\0\u24b9\0\u2508\0\u2557\0\u25a6\0\u25f5\0\u2644\0\u2693"+
    "\0\u26e2\0\u2731\0\u2780\0\u27cf\0\u281e\0\u286d\0\u28bc\0\u290b"+
    "\0\u295a\0\u29a9\0\u07b7\0\u29f8\0\u2a47\0\u2a96\0\u2ae5\0\u0278"+
    "\0\u0278\0\u2b34\0\u2b83\0\u2bd2\0\u2c21\0\u2c70\0\u2cbf\0\u2d0e"+
    "\0\u2d5d\0\u07b7\0\u2dac\0\u2dfb\0\u2e4a\0\u2e99\0\u2ee8\0\u2f37"+
    "\0\u2f86\0\u2fd5\0\u3024\0\u3073\0\u30c2\0\u3111\0\u3160\0\u31af"+
    "\0\u31fe\0\u324d\0\u329c\0\u32eb\0\u333a\0\u3389\0\u33d8\0\u3427"+
    "\0\u3476\0\u34c5\0\u3514\0\u3563\0\u35b2\0\u3601\0\u3650\0\u07b7"+
    "\0\u369f\0\u36ee\0\u373d\0\u378c\0\u37db\0\u382a\0\u0278\0\u3879"+
    "\0\u38c8\0\u3917\0\u3966\0\u39b5\0\u07b7\0\u3a04\0\u3a53\0\u3aa2"+
    "\0\u07b7\0\u3af1\0\u07b7\0\u3b40\0\u3b8f\0\u3bde\0\u3c2d\0\u3c7c"+
    "\0\u3ccb\0\u3d1a\0\u07b7\0\u3d69\0\u3db8\0\u3e07\0\u3e56\0\u3ea5"+
    "\0\u3ef4\0\u3f43\0\u3f92\0\u3fe1\0\u4030\0\u407f\0\u40ce\0\u411d"+
    "\0\u416c\0\u41bb\0\u420a\0\u4259\0\u42a8\0\u42f7\0\u4346\0\u4395"+
    "\0\u43e4\0\u4433\0\u4482\0\u44d1\0\u4520\0\u456f\0\u07b7\0\u45be"+
    "\0\u460d\0\u465c\0\u46ab\0\u46fa\0\u4749\0\u4798\0\u47e7\0\u4836"+
    "\0\u4885\0\u07b7\0\u07b7\0\u48d4\0\u4923\0\u4972\0\u49c1\0\u4a10"+
    "\0\u4a5f\0\u4aae\0\u4afd\0\u4b4c\0\u4b9b\0\u4bea\0\u4c39\0\u07b7"+
    "\0\u4c88\0\u4cd7\0\u4d26\0\u4d75\0\u4dc4\0\u4e13\0\u4e62\0\u4eb1"+
    "\0\u4f00\0\u4f4f\0\u4f9e\0\u4fed\0\u503c\0\u508b\0\u50da\0\u5129"+
    "\0\u5178\0\u51c7\0\u07b7\0\u5216\0\u5265\0\u52b4\0\u5303\0\u5352"+
    "\0\u53a1\0\u53f0\0\u543f\0\u548e\0\u54dd\0\u552c\0\u557b\0\u55ca"+
    "\0\u5619\0\u5668\0\u56b7\0\u5706\0\u5755\0\u57a4\0\u57f3\0\u5842"+
    "\0\u5891\0\u58e0\0\u592f\0\u07b7\0\u597e\0\u59cd\0\u5a1c\0\u5a6b"+
    "\0\u5aba\0\u5b09\0\u5b58\0\u5ba7\0\u5bf6\0\u5c45\0\u5c94\0\u5ce3"+
    "\0\u5d32\0\u07b7\0\u5d81\0\u07b7\0\u5dd0\0\u5e1f\0\u5e6e\0\u5ebd"+
    "\0\u5f0c\0\u5f5b\0\u5faa\0\u5ff9\0\u6048\0\u6097\0\u60e6\0\u6135"+
    "\0\u6184\0\u61d3\0\u6222\0\u6271\0\u07b7\0\u62c0\0\u630f\0\u635e"+
    "\0\u63ad\0\u63fc\0\u644b\0\u649a\0\u64e9\0\u6538\0\u6587\0\u65d6"+
    "\0\u6625\0\u6674\0\u07b7\0\u66c3\0\u6712\0\u6761\0\u67b0\0\u67ff"+
    "\0\u684e\0\u689d\0\u68ec\0\u100c\0\u693b\0\u07b7\0\u100c\0\u698a"+
    "\0\u6222\0\u69d9\0\u6a28\0\u6a77\0\u6ac6\0\u6b15\0\u6b64\0\u6bb3"+
    "\0\u6c02\0\u07b7\0\u6c51\0\u6ca0\0\u6cef\0\u6d3e\0\u6d8d\0\u6ddc"+
    "\0\u6e2b\0\u6e7a\0\u6ec9\0\u6f18\0\u6f67\0\u6fb6\0\u7005\0\u7054"+
    "\0\u70a3\0\u100c\0\u70f2\0\u7141\0\u7190\0\u71df\0\u722e\0\u727d"+
    "\0\u72cc\0\u731b\0\u736a\0\u73b9\0\u7408\0\u7457\0\u74a6\0\u74f5"+
    "\0\u7544\0\u7593\0\u75e2\0\u7631\0\u7680\0\u76cf\0\u771e\0\u776d"+
    "\0\u77bc\0\u780b\0\u785a\0\u78a9\0\u78f8\0\u7947\0\u7996\0\u79e5"+
    "\0\u7a34\0\u7a83\0\u7ad2\0\u7b21\0\u7b70\0\u7bbf\0\u7c0e\0\u100c"+
    "\0\u7c5d\0\u7cac\0\u7cfb\0\u7d4a\0\u7d99\0\u7de8\0\u7e37\0\u7e86"+
    "\0\u7ed5\0\u7f24\0\u7f73\0\u7fc2\0\u8011\0\u8060\0\u100c\0\u80af"+
    "\0\u80fe\0\u814d\0\u819c\0\u81eb\0\u823a\0\u100c\0\u8289\0\u82d8"+
    "\0\u8327\0\u8376\0\u83c5\0\u8414\0\u8463\0\u84b2\0\u100c\0\u8501"+
    "\0\u8550\0\u100c\0\u859f\0\u85ee\0\u0278\0\u863d\0\u868c\0\u86db"+
    "\0\u872a\0\u8779\0\u87c8\0\u8817\0\u100c\0\u8866\0\u88b5\0\u8904"+
    "\0\u8953\0\u89a2\0\u100c\0\u89f1\0\u8a40\0\u0ca7\0\u8a8f\0\u8ade"+
    "\0\u8b2d\0\u0278\0\u0278\0\u8b7c\0\u100c\0\u8bcb\0\u8c1a\0\u8c69"+
    "\0\u8cb8\0\u8d07\0\u8d56\0\u8da5\0\u8df4\0\u8e43\0\u8e92\0\u8ee1"+
    "\0\u100c\0\u8f30\0\u8f7f\0\u8fce\0\u901d\0\u906c\0\u90bb\0\u100c"+
    "\0\u910a\0\u9159\0\u91a8\0\u91f7\0\u100c\0\u9246\0\u9295\0\u100c"+
    "\0\u92e4\0\u9333\0\u9382\0\u93d1\0\u9420\0\u946f\0\u94be\0\u100c"+
    "\0\u950d\0\u955c\0\u100c\0\u95ab\0\u95fa\0\u9649\0\u100c\0\u9698"+
    "\0\u96e7\0\u9736\0\u9785\0\u97d4\0\u100c\0\u100c\0\u9823\0\u9872"+
    "\0\u98c1\0\u9910\0\u100c\0\u100c\0\u100c\0\u995f\0\u99ae\0\u100c"+
    "\0\u100c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[577];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\5\1\6\1\0\1\7\1\10\1\11\1\12\5\5"+
    "\1\13\1\12\2\5\6\12\1\14\1\15\1\5\1\16"+
    "\5\12\1\17\2\12\1\20\21\12\1\21\1\22\6\12"+
    "\1\17\1\12\1\20\13\12\1\23\1\6\1\24\3\5"+
    "\1\6\1\0\1\25\1\5\1\26\1\12\1\27\4\5"+
    "\1\13\1\30\2\5\7\12\3\5\26\12\1\31\3\12"+
    "\1\32\1\5\1\33\23\12\1\5\1\6\4\5\1\6"+
    "\1\0\1\7\1\5\1\26\1\12\1\27\1\34\4\5"+
    "\1\33\2\5\1\35\2\36\3\35\1\12\3\5\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\2\45\1\46\1\47"+
    "\1\45\1\50\1\51\1\52\1\53\1\54\1\45\1\55"+
    "\1\56\1\57\1\60\1\45\1\61\3\45\2\5\1\33"+
    "\1\45\1\62\1\45\1\63\2\45\1\64\13\45\1\61"+
    "\1\5\1\65\1\5\1\66\1\34\1\5\1\6\1\0"+
    "\1\25\2\5\1\12\1\27\1\67\1\70\1\71\1\5"+
    "\1\13\1\30\2\5\1\72\5\73\1\12\1\74\1\75"+
    "\1\76\1\77\14\12\1\100\1\101\13\12\1\5\1\102"+
    "\1\33\23\12\1\5\1\6\2\5\1\67\120\0\1\6"+
    "\111\0\1\6\6\0\1\7\144\0\1\103\73\0\1\12"+
    "\6\0\1\12\2\0\7\12\3\0\32\12\2\0\24\12"+
    "\11\0\1\104\120\0\1\12\6\0\1\12\2\0\7\12"+
    "\3\0\10\12\1\105\21\12\2\0\10\12\1\105\13\12"+
    "\13\0\1\12\6\0\1\12\2\0\7\12\3\0\15\12"+
    "\1\106\14\12\2\0\14\12\1\106\7\12\10\0\1\25"+
    "\122\0\1\27\5\0\1\27\2\0\6\27\4\0\32\27"+
    "\2\0\24\27\13\0\1\12\1\27\5\0\1\33\2\0"+
    "\6\33\1\12\2\0\1\107\32\33\2\0\24\33\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\7\12\1\110"+
    "\22\12\2\0\24\12\13\0\1\12\1\27\5\0\1\33"+
    "\2\0\6\33\1\12\3\0\32\33\2\0\24\33\10\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\6\35"+
    "\1\112\3\0\32\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\1\113"+
    "\4\35\1\113\1\112\3\0\32\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\6\45\1\115\4\45\1\116\5\45"+
    "\1\117\10\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\13\45\1\120\2\45\1\121\13\45\2\0\1\112"+
    "\11\45\1\120\11\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\1\122"+
    "\3\45\1\123\2\45\1\124\3\45\1\125\2\45\1\126"+
    "\2\45\1\127\10\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\1\130\3\45\1\131\25\45\2\0\1\112"+
    "\1\130\22\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\13\45\1\132"+
    "\16\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\4\45\1\133\3\45\1\134\5\45\1\135\13\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\32\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\3\45\1\136"+
    "\10\45\1\137\1\140\13\45\1\141\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\24\45\1\142\5\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\16\45\1\143"+
    "\13\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\16\45\1\144\13\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\16\45\1\145\5\45\1\146\5\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\17\45\1\147"+
    "\12\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\1\150\31\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\1\151\3\45\1\152\25\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\4\45\1\153\3\45\1\154"+
    "\21\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\4\45\1\155\3\45\1\156\21\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\21\45\1\157\1\160\7\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\7\45"+
    "\1\161\22\45\2\0\1\112\6\45\1\161\14\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\13\45\1\120\16\45\2\0\1\112"+
    "\11\45\1\120\11\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\1\130"+
    "\31\45\2\0\1\112\1\130\22\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\32\45\2\0\1\112\20\45\1\162\2\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\66\6\0\1\111\1\66"+
    "\1\0\7\66\3\0\32\66\2\0\24\66\3\0\1\66"+
    "\7\0\1\12\6\0\1\12\2\0\6\72\1\12\3\0"+
    "\32\12\2\0\24\12\13\0\1\12\6\0\1\12\1\163"+
    "\1\0\6\73\1\12\3\0\32\12\2\0\24\12\35\0"+
    "\1\164\116\0\1\165\74\0\1\12\6\0\1\12\2\0"+
    "\7\12\3\0\15\12\1\166\14\12\2\0\24\12\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\16\12\1\167"+
    "\13\12\2\0\24\12\13\0\1\12\6\0\1\12\2\0"+
    "\7\12\3\0\21\12\1\170\10\12\2\0\24\12\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\15\12\1\171"+
    "\14\12\2\0\14\12\1\171\7\12\13\0\1\12\6\0"+
    "\1\12\2\0\7\12\3\0\10\12\1\172\21\12\2\0"+
    "\10\12\1\172\13\12\13\0\1\12\6\0\1\12\2\0"+
    "\7\12\3\0\4\12\1\173\25\12\2\0\24\12\10\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\32\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\3\174\2\35"+
    "\1\174\1\112\3\0\32\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\66\6\0\1\111\1\66\1\0"+
    "\7\66\3\0\32\175\2\0\1\66\23\175\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\21\45\1\176\10\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\10\45\1\177\21\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\4\45\1\200"+
    "\25\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\24\45\1\201\5\45\2\0\1\112\21\45\1\201\1\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\23\45\1\202\6\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\14\45\1\203"+
    "\15\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\15\45\1\204\14\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\4\45\1\205\25\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\1\206\31\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\13\45\1\207\1\210"+
    "\1\211\14\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\4\45\1\212\25\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\21\45\1\213\10\45\2\0\1\112"+
    "\16\45\1\213\4\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\21\45"+
    "\1\214\10\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\10\45\1\215\21\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\2\45\1\216\27\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\2\45\1\217\10\45"+
    "\1\220\16\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\21\45\1\221\10\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\1\222\31\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\3\45\1\223\26\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\20\45\1\224"+
    "\11\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\22\45\1\225\7\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\6\45\1\226\23\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\3\45\1\227\26\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\14\45\1\230"+
    "\15\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\4\45\1\231\25\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\2\45\1\232\27\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\21\45\1\233\1\234\7\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\3\45"+
    "\1\235\26\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\20\45\1\236\11\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\13\45\1\237\16\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\14\45\1\240\12\45"+
    "\1\241\2\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\23\45\1\242\6\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\13\45\1\243\16\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\24\45\1\244\5\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\10\45"+
    "\1\245\21\45\2\0\1\112\7\45\1\245\13\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\32\45\2\0\1\112\20\45\1\246"+
    "\2\45\3\0\1\66\17\0\1\163\1\0\6\247\77\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\3\12\1\250"+
    "\26\12\2\0\24\12\13\0\1\12\6\0\1\12\2\0"+
    "\7\12\3\0\23\12\1\251\6\12\2\0\24\12\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\32\12\2\0"+
    "\1\252\23\12\13\0\1\12\6\0\1\12\2\0\7\12"+
    "\3\0\32\12\2\0\1\253\23\12\13\0\1\12\6\0"+
    "\1\12\2\0\7\12\3\0\21\12\1\254\10\12\2\0"+
    "\24\12\10\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\6\255\1\112\3\0\32\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\66\6\0\1\111\1\256"+
    "\1\0\7\66\3\0\32\175\2\0\1\66\23\175\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\4\45\1\257\25\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\15\45\1\260\14\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\1\261"+
    "\31\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\4\45\1\262\25\45\2\0\1\112\4\45\1\262\16\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\16\45\1\263\13\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\17\45\1\264"+
    "\12\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\23\45\1\265\6\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\2\45\1\266\27\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\22\45\1\267\7\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\24\45\1\270"+
    "\5\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\1\45\1\271\30\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\22\45\1\272\7\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\1\273\2\45\1\274\26\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\12\45"+
    "\1\262\17\45\2\0\1\112\10\45\1\262\12\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\4\45\1\275\25\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\14\45\1\276\15\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\7\45"+
    "\1\277\22\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\7\45\1\300\22\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\1\301\31\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\14\45\1\302\15\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\6\45\1\303"+
    "\23\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\10\45\1\304\21\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\24\45\1\305\5\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\23\45\1\306\6\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\10\45\1\307"+
    "\21\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\10\45\1\310\21\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\1\45\1\311\30\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\25\45\1\312\4\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\10\45\1\313"+
    "\21\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\1\314\31\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\22\45\1\315\7\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\10\45\1\271\21\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\24\45\1\316\5\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\4\45"+
    "\1\317\25\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\1\320\31\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\23\45\1\321\6\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\24\45\1\322\5\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\1\323\31\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\23\45"+
    "\1\201\6\45\2\0\1\112\20\45\1\201\2\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\32\45\2\0\1\112\15\45\1\324"+
    "\5\45\3\0\1\66\21\0\6\247\77\0\1\12\6\0"+
    "\1\12\2\0\7\12\3\0\22\12\1\325\7\12\2\0"+
    "\20\12\1\325\3\12\13\0\1\12\6\0\1\12\2\0"+
    "\7\12\3\0\22\12\1\326\7\12\2\0\20\12\1\326"+
    "\3\12\13\0\1\12\6\0\1\12\2\0\7\12\3\0"+
    "\4\12\1\327\25\12\2\0\24\12\10\0\1\111\2\0"+
    "\1\112\6\0\1\330\1\66\1\0\6\35\1\112\3\0"+
    "\32\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\66\6\0\1\111\1\66\1\0\7\66\3\0\32\66"+
    "\2\0\3\66\1\331\20\66\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\6\45\1\332\23\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\4\45\1\333\25\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\32\45\2\0\1\334\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\15\45\1\335\14\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\16\45\1\336"+
    "\13\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\21\45\1\337\10\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\12\45\1\340\17\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\4\45\1\341\25\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\14\45\1\342"+
    "\15\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\16\45\1\343\13\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\24\45\1\344\5\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\21\45\1\345\10\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\4\45\1\346"+
    "\25\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\2\45\1\347\27\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\10\45\1\350\21\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\1\351\31\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\4\45\1\352\25\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\22\45"+
    "\1\353\7\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\24\45\1\354\5\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\4\45\1\355\25\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\2\45\1\356\27\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\10\45"+
    "\1\357\21\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\10\45\1\360\21\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\15\45\1\361\14\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\5\45\1\362\24\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\21\45"+
    "\1\363\10\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\16\45\1\364\13\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\16\45\1\365\13\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\14\45\1\366\15\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\26\45"+
    "\1\367\3\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\4\45\1\370\25\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\2\45\1\371\27\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\16\45\1\372\13\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\13\45"+
    "\1\373\16\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\21\45\1\374\10\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\32\45\2\0\1\112\17\45\1\375"+
    "\3\45\3\0\1\66\7\0\1\12\6\0\1\12\2\0"+
    "\7\12\3\0\16\12\1\376\13\12\2\0\15\12\1\376"+
    "\6\12\13\0\1\12\6\0\1\12\2\0\7\12\3\0"+
    "\16\12\1\377\13\12\2\0\15\12\1\377\6\12\10\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\1\u0100"+
    "\1\u0101\5\112\3\0\32\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\66\6\0\1\111\1\66\1\0"+
    "\7\66\3\0\32\66\2\0\15\66\1\u0102\6\66\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\1\u0103\31\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\1\u0104\31\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\23\112\1\u0105\6\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\32\45\2\0"+
    "\1\u0106\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\16\45\1\u0107"+
    "\13\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\1\45\1\u0108\30\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\15\45\1\u0109\14\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\13\45\1\u010a\16\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\32\45\2\0"+
    "\1\u010b\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\15\45\1\u010c"+
    "\14\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\7\45\1\u010d\22\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\15\45\1\u010e\14\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\32\45\2\0\1\u010f\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\21\45\1\u0110\10\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\13\45\1\u0111"+
    "\16\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\15\45\1\u0112\14\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\4\45\1\u0113\25\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\4\45\1\u0114\25\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\5\45\1\u0115"+
    "\24\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\32\45\2\0\1\u0116\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\10\45\1\u0117\21\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\4\45\1\u0118\25\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\32\45\2\0\1\u0119\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\15\45\1\u011a\14\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\4\45\1\u011b"+
    "\25\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\16\45\1\u011c\13\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\21\45\1\u011d\10\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\23\45\1\u011e\6\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\32\45\2\0"+
    "\1\u011f\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\16\45\1\u0120"+
    "\13\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\10\45\1\u0121\21\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\6\112\1\u0122\3\0\32\45\2\0\1\112\23\45\3\0"+
    "\1\66\7\0\1\12\6\0\1\12\2\0\7\12\3\0"+
    "\13\12\1\u0123\16\12\2\0\12\12\1\u0123\11\12\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\13\12\1\u0124"+
    "\16\12\2\0\12\12\1\u0124\11\12\10\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\1\112\5\u0125\1\112"+
    "\3\0\32\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\3\u0125\4\112"+
    "\3\0\32\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\66\6\0\1\111\1\66\1\0\7\66\3\0"+
    "\32\66\2\0\13\66\1\u0126\10\66\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\21\45\1\u0127\10\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\2\45\1\u0128\27\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\4\112\1\u0129\25\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\23\112\1\u012a"+
    "\6\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\16\45"+
    "\1\u012b\13\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\1\u012c\31\45\2\0\1\112\23\45\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\23\45\1\u012d\6\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\24\112\1\u012e\5\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\2\45\1\u012f\27\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\1\u0107"+
    "\31\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\1\u0130\31\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\2\112\1\u0131\11\112\1\u0132\15\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\16\45\1\u0133\13\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\1\u0134\31\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\21\45"+
    "\1\u0135\10\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\10\45\1\u0136\21\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\24\112\1\u0137\5\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\2\45\1\u0138\27\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\32\45\2\0"+
    "\1\u0139\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\5\112\1\u013a"+
    "\11\112\1\u013b\12\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\4\45\1\u013c\25\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\23\45\1\u013d\6\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\21\45\1\u013e\10\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\10\45"+
    "\1\u013f\21\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\u0140\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\32\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\25\112\1\u0141\4\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\16\45\1\u0142\13\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\u0143\7\112\3\0\32\112\2\0\24\112\3\0"+
    "\1\66\7\0\1\12\6\0\1\12\2\0\7\12\3\0"+
    "\10\12\1\u0144\21\12\2\0\10\12\1\u0144\13\12\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\10\12\1\u0145"+
    "\21\12\2\0\10\12\1\u0145\13\12\10\0\1\111\2\0"+
    "\1\112\6\0\1\u0146\1\66\1\0\7\112\3\0\32\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\66"+
    "\6\0\1\111\1\66\1\u0147\7\66\3\0\32\66\2\0"+
    "\24\66\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\32\45\2\0\1\u0148"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\10\45\1\u0149\21\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\27\112"+
    "\1\u014a\2\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\4\112\1\u014b\25\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\27\45\1\343\2\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\22\45\1\u014c\7\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\1\u014d\31\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\22\112\1\u014e"+
    "\7\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\10\45"+
    "\1\u014f\21\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\21\45\1\u0150\10\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\21\112\1\u0151\10\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\16\112\1\u0152\13\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\21\45\1\u0153\10\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\3\45"+
    "\1\u010d\26\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\2\45\1\u0154\27\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\22\112\1\u0155\7\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\1\u0156\31\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\2\112\1\u0157\27\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\16\112\1\u0158"+
    "\13\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\1\u0159"+
    "\31\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\22\45"+
    "\1\u015a\7\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\21\45\1\u015b\10\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\3\45\1\u015c\26\45\2\0\1\112"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\3\45\1\u015d\26\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\66\6\0\1\111\1\66\1\0\7\66\3\0\23\66"+
    "\1\u015e\6\66\2\0\24\66\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\10\112\1\u015f\21\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\32\45\2\0\1\u0160\23\45\3\0\1\66\20\0"+
    "\1\u0161\105\0\1\12\6\0\1\12\2\0\7\12\3\0"+
    "\2\12\1\u0162\27\12\2\0\3\12\1\u0162\20\12\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\2\12\1\u0163"+
    "\27\12\2\0\3\12\1\u0163\20\12\10\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\1\u0164\2\u0165\1\u0166"+
    "\3\112\3\0\32\112\2\0\24\112\3\0\1\66\5\0"+
    "\1\u0147\1\0\21\u0147\1\0\1\u0147\1\0\60\u0147\10\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\2\112\1\u0167\27\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\16\45\1\u0168\13\45\2\0\1\112\23\45"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\23\112\1\u0169\6\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\27\112\1\u016a\2\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\u016b\1\114\1\0\7\112\3\0\21\45\1\u016c"+
    "\1\u016d\7\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\24\112\1\u016e\5\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\114\1\0"+
    "\7\112\3\0\1\u016f\31\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\114"+
    "\1\0\7\112\3\0\32\45\2\0\1\u0170\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\4\112\1\u0171\25\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\3\112\1\u0172\26\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\10\45\1\u0173\21\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\1\u0174"+
    "\31\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\24\112\1\u0175\5\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\21\45\1\u0176\10\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\1\u0177\31\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\21\112\1\u0178\10\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\22\112\1\u0179\7\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\16\45\1\u017a\13\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\16\45"+
    "\1\u017b\13\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\66\6\0\1\111\1\66\1\0\7\66"+
    "\3\0\16\66\1\u017c\13\66\2\0\24\66\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\22\112\1\u017d\7\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\1\u017e\1\112\1\u017f\12\112\1\u0180"+
    "\14\112\2\0\24\112\3\0\1\66\33\0\32\u0181\3\0"+
    "\23\u0181\13\0\1\12\6\0\1\12\2\0\7\12\3\0"+
    "\10\12\1\u0182\21\12\2\0\10\12\1\u0182\13\12\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\10\12\1\u0183"+
    "\21\12\2\0\10\12\1\u0183\13\12\10\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\1\112\5\u0184\1\112"+
    "\3\0\32\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\6\u0184\1\112"+
    "\3\0\32\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\2\u0184\5\112"+
    "\3\0\32\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\16\112\1\u0185\13\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\15\45\1\u0186\14\45\2\0\1\112\23\45\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\16\112\1\u0187\13\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\23\112\1\u0188\6\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\6\u0189\1\112\3\0\32\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\32\45\2\0\1\u018a"+
    "\23\45\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\1\u018b\31\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\13\45\1\u018c\16\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\2\112"+
    "\1\u018d\2\112\1\u018e\16\112\1\u018f\5\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\1\u0190\31\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\10\112\1\u0191\21\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\114\1\0\7\112\3\0\16\45\1\u0192\13\45"+
    "\2\0\1\112\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\21\45"+
    "\1\u0107\10\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\1\u0193\31\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\114\1\0\7\112"+
    "\3\0\32\45\2\0\1\u0194\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\14\112\1\u0195\15\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\14\112\1\u0196\15\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\22\112\1\u0197\7\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\114\1\0\7\112\3\0\22\45\1\u0198\7\45\2\0"+
    "\1\112\23\45\3\0\1\66\4\0\1\u0199\2\0\1\66"+
    "\6\0\1\111\1\66\1\0\7\66\3\0\32\66\2\0"+
    "\24\66\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\10\112\1\u019a\21\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\15\112\1\u019b"+
    "\14\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\21\112"+
    "\1\u019c\10\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\24\112\1\u019d\5\112\2\0\24\112\3\0\1\66\17\0"+
    "\1\u019e\13\0\32\u0181\3\0\23\u0181\13\0\1\12\6\0"+
    "\1\12\2\0\7\12\3\0\23\12\1\u019f\6\12\2\0"+
    "\21\12\1\u019f\2\12\13\0\1\12\6\0\1\12\2\0"+
    "\7\12\3\0\23\12\1\u01a0\6\12\2\0\21\12\1\u01a0"+
    "\2\12\10\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\14\112\1\u01a1\15\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\16\112\1\u01a2\13\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\3\112\1\u01a3\26\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\21\112\1\u01a4"+
    "\10\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\4\45"+
    "\1\u01a5\25\45\2\0\1\112\23\45\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\16\112\1\u01a6\13\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\16\112\1\u01a7\13\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\22\112\1\u01a8\7\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\2\112\1\u01a9\27\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\5\112\1\u01aa\24\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\21\112\1\u01ab"+
    "\10\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\2\112"+
    "\1\u01ac\2\112\1\u01ad\16\112\1\u01ae\5\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\17\112\1\u01af\12\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\24\112\1\u01b0\5\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\26\112\1\u01b1"+
    "\3\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\114\1\0\7\112\3\0\32\45"+
    "\2\0\1\u01b2\23\45\3\0\1\66\4\0\1\111\2\0"+
    "\1\66\6\0\1\111\1\66\1\0\7\66\3\0\5\66"+
    "\1\u01b3\24\66\2\0\24\66\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\1\112\1\u01b4\30\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\23\112\1\u01b5\6\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\4\112\1\u01b6\25\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\4\112\1\u01b7\25\112\2\0\24\112"+
    "\3\0\1\66\33\0\32\u01b8\3\0\23\u01b8\13\0\1\12"+
    "\6\0\1\12\2\0\7\12\3\0\24\12\1\u01b9\5\12"+
    "\2\0\22\12\1\u01b9\1\12\13\0\1\12\6\0\1\12"+
    "\2\0\7\12\3\0\24\12\1\u01ba\5\12\2\0\22\12"+
    "\1\u01ba\1\12\10\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\17\112\1\u01bb\12\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\1\u01bc\31\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\10\112\1\u01bd\21\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\114\1\0\7\112\3\0\22\45\1\u01be"+
    "\7\45\2\0\1\112\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\14\112\1\u01bf\15\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\21\112\1\u01c0\10\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\24\112\1\u01c1\5\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\10\112\1\u01c2\21\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\10\112\1\u01c3\21\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\10\112\1\u01c4\21\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\16\112\1\u01c5"+
    "\13\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\16\112"+
    "\1\u01c6\13\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\22\112\1\u01c7\7\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\16\112\1\u01c8\13\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\13\112\1\u01c9\16\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\16\112\1\u01ca\13\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\2\112\1\u01cb\2\112\1\u01cc"+
    "\24\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\66\6\0\1\111\1\66\1\0\7\66\3\0\16\66"+
    "\1\u01cd\13\66\2\0\24\66\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\13\112\1\u01ce\16\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\10\112\1\u01cf\21\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\1\u01d0\31\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\25\112\1\u01d1\4\112\2\0\24\112\3\0"+
    "\1\66\17\0\1\u01d2\13\0\32\u01b8\3\0\23\u01b8\13\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\3\12\1\u01d3"+
    "\26\12\2\0\4\12\1\u01d3\17\12\13\0\1\12\6\0"+
    "\1\12\2\0\7\12\3\0\3\12\1\u01d4\26\12\2\0"+
    "\4\12\1\u01d4\17\12\10\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\16\112\1\u01d5\13\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\23\112\1\u01d6"+
    "\6\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\16\112"+
    "\1\u01d7\13\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\114\1\0\7\112\3\0"+
    "\32\45\2\0\1\u01d8\23\45\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\17\112\1\u01d9\12\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\14\112\1\u01da\15\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\1\u01db\31\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\16\112\1\u01dc\13\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\2\112\1\u01dd\27\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\16\112\1\u01de\13\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\14\112\1\u01df\15\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\21\112\1\u01e0"+
    "\10\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\24\112"+
    "\1\u01e1\5\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\1\u01e2\31\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\21\112\1\u01e3\10\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\16\112\1\u01e4\13\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\16\112\1\u01e5\13\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\66\6\0\1\111\1\66"+
    "\1\0\7\66\3\0\21\66\1\u01e6\10\66\2\0\24\66"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\4\112\1\u01e7\25\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\6\112\1\u01e8\23\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\2\112\1\u01e9"+
    "\27\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\16\112"+
    "\1\u01ea\13\112\2\0\24\112\3\0\1\66\72\0\1\u01eb"+
    "\33\0\1\12\6\0\1\12\2\0\7\12\3\0\4\12"+
    "\1\u01ec\25\12\2\0\5\12\1\u01ec\16\12\13\0\1\12"+
    "\6\0\1\12\2\0\6\12\1\u01ed\3\0\4\12\1\u01ee"+
    "\25\12\2\0\5\12\1\u01ee\16\12\10\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\15\112"+
    "\1\u01ef\14\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\16\112\1\u01f0\13\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\24\112\1\u01f1\5\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\16\112\1\u01f2\13\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\24\112\1\u01f3\5\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\21\112\1\u01f4\10\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\15\112\1\u01f5\14\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\1\u01f6\31\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\17\112\1\u01f7"+
    "\12\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\14\112"+
    "\1\u01f8\15\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\1\u01f9\31\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\21\112\1\u01fa\10\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\3\112\1\u01fb\26\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\14\112\1\u01fc\15\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\21\112\1\u01fd\10\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\66\6\0\1\111"+
    "\1\66\1\0\7\66\3\0\14\66\1\u01fe\15\66\2\0"+
    "\24\66\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\24\112\1\u01ff\5\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\10\112\1\u0200"+
    "\21\112\2\0\24\112\3\0\1\66\104\0\1\u0201\21\0"+
    "\1\12\6\0\1\12\2\0\7\12\3\0\22\12\1\u0202"+
    "\7\12\2\0\20\12\1\u0202\3\12\13\0\1\12\6\0"+
    "\1\12\2\0\7\12\3\0\22\12\1\u0203\7\12\2\0"+
    "\20\12\1\u0203\3\12\10\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\4\112\1\u0204\25\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\22\112\1\u0205"+
    "\7\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\22\112"+
    "\1\u0206\7\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\15\112\1\u0207\14\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\13\112\1\u0208\16\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\10\112\1\u0209\21\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\2\112\1\u020a\27\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\16\112\1\u020b\13\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\24\112\1\u020c\5\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\21\112\1\u020d"+
    "\10\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\10\112"+
    "\1\u020e\21\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\17\112\1\u020f\12\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\14\112\1\u0210\15\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\16\112\1\u0211\13\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\16\112\1\u0212\13\112\2\0\24\112"+
    "\3\0\1\66\102\0\1\u0213\20\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\15\112\1\u0214"+
    "\14\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\24\112"+
    "\1\u0215\5\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\4\112\1\u0216\25\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\1\u0217\31\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\16\112\1\u0218\13\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\10\112\1\u0219\21\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\15\112\1\u021a\14\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\13\112\1\u021b\16\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\10\112\1\u021c\21\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\16\112\1\u021d"+
    "\13\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\16\112"+
    "\1\u021e\13\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\24\112\1\u021f\5\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\15\112\1\u0220\14\112\2\0\24\112\3\0\1\66"+
    "\20\0\1\u0147\102\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\23\112\1\u0221\6\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\1\u0222\31\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\15\112\1\u0223\14\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\21\112\1\u0224"+
    "\10\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\16\112"+
    "\1\u0225\13\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\4\112\1\u0226\25\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\1\u0227\31\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\16\112\1\u0228\13\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\15\112\1\u0229\14\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\13\112\1\u022a\16\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\4\112\1\u022b\25\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\21\112\1\u022c\10\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\23\112\1\u022d"+
    "\6\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\10\112"+
    "\1\u022e\21\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\15\112\1\u022f\14\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\15\112\1\u0230\14\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\21\112\1\u0231\10\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\4\112\1\u0232\25\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\1\u0233\31\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\10\112\1\u0234\21\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\4\112\1\u0235\25\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\16\112\1\u0236"+
    "\13\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\23\112"+
    "\1\u0237\6\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\10\112\1\u0238\21\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\15\112\1\u0239\14\112\2\0\24\112\3\0\1\66"+
    "\4\0\1\111\2\0\1\112\6\0\1\112\1\66\1\0"+
    "\7\112\3\0\21\112\1\u023a\10\112\2\0\24\112\3\0"+
    "\1\66\4\0\1\111\2\0\1\112\6\0\1\112\1\66"+
    "\1\0\7\112\3\0\16\112\1\u023b\13\112\2\0\24\112"+
    "\3\0\1\66\4\0\1\111\2\0\1\112\6\0\1\112"+
    "\1\66\1\0\7\112\3\0\4\112\1\u023c\25\112\2\0"+
    "\24\112\3\0\1\66\4\0\1\111\2\0\1\112\6\0"+
    "\1\112\1\66\1\0\7\112\3\0\16\112\1\u023d\13\112"+
    "\2\0\24\112\3\0\1\66\4\0\1\111\2\0\1\112"+
    "\6\0\1\112\1\66\1\0\7\112\3\0\23\112\1\u023e"+
    "\6\112\2\0\24\112\3\0\1\66\4\0\1\111\2\0"+
    "\1\112\6\0\1\112\1\66\1\0\7\112\3\0\10\112"+
    "\1\u023f\21\112\2\0\24\112\3\0\1\66\4\0\1\111"+
    "\2\0\1\112\6\0\1\112\1\66\1\0\7\112\3\0"+
    "\4\112\1\u0240\25\112\2\0\24\112\3\0\1\66\4\0"+
    "\1\111\2\0\1\112\6\0\1\112\1\66\1\0\7\112"+
    "\3\0\16\112\1\u0241\13\112\2\0\24\112\3\0\1\66"+
    "\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[39421];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\1\11\3\1\1\11\1\1\1\11\2\1\1\11"+
    "\2\1\4\11\1\1\1\11\3\1\1\11\1\1\1\11"+
    "\32\1\3\11\3\1\1\11\4\1\3\11\2\1\1\11"+
    "\1\1\1\0\52\1\2\11\312\1\1\0\2\1\1\0"+
    "\35\1\1\0\37\1\1\0\27\1\1\0\4\1\1\0"+
    "\31\1\1\0\31\1\1\0\30\1\1\0\25\1\1\0"+
    "\21\1\1\0\56\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[577];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { return new Symbol(sym.ERRORLEX,yycolumn,yyline,yytext());
            }
            // fall through
          case 90: break;
          case 2:
            { /*Ignore*/
            }
            // fall through
          case 91: break;
          case 3:
            { /*ignore*/
            }
            // fall through
          case 92: break;
          case 4:
            { yybegin(STRING); return new Symbol(sym.COMILLAS, yycolumn, yyline, yytext());
            }
            // fall through
          case 93: break;
          case 5:
            { return new Symbol(sym.USUARIO,yycolumn,yyline,yytext());
            }
            // fall through
          case 94: break;
          case 6:
            { return new Symbol(sym.COMA, yycolumn, yyline, yytext());
            }
            // fall through
          case 95: break;
          case 7:
            { return new Symbol(sym.DOSP, yycolumn, yyline, yytext());
            }
            // fall through
          case 96: break;
          case 8:
            { return new Symbol(sym.MENORQ,yycolumn,yyline,yytext());
            }
            // fall through
          case 97: break;
          case 9:
            { return new Symbol(sym.MAYORQ,yycolumn,yyline,yytext());
            }
            // fall through
          case 98: break;
          case 10:
            { return new Symbol(sym.CORCHETEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 99: break;
          case 11:
            { return new Symbol(sym.CORCHETEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 100: break;
          case 12:
            { return new Symbol(sym.LLAVEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 101: break;
          case 13:
            { return new Symbol(sym.LLAVEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 102: break;
          case 14:
            { yybegin(YYINITIAL); return new Symbol(sym.COMILLAS, yycolumn, yyline, yytext());
            }
            // fall through
          case 103: break;
          case 15:
            { return new Symbol(sym.ID,yycolumn,yyline,yytext());
            }
            // fall through
          case 104: break;
          case 16:
            { yybegin(RESTRICCION); return new Symbol(sym.CORCHETEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 105: break;
          case 17:
            { yybegin(RESTRICCION); return new Symbol(sym.APOSTROFE, yycolumn, yyline, yytext());
            }
            // fall through
          case 106: break;
          case 18:
            { return new Symbol(sym.NUMERO, yycolumn, yyline, yytext());
            }
            // fall through
          case 107: break;
          case 19:
            { return new Symbol(sym.OR,yycolumn,yyline,yytext());
            }
            // fall through
          case 108: break;
          case 20:
            { return new Symbol(sym.TITULO, yycolumn, yyline, yytext());
            }
            // fall through
          case 109: break;
          case 21:
            { yybegin(STRING); return new Symbol(sym.APOSTROFE, yycolumn, yyline, yytext());
            }
            // fall through
          case 110: break;
          case 22:
            { return new Symbol(sym.PARENTESISA, yycolumn, yyline, yytext());
            }
            // fall through
          case 111: break;
          case 23:
            { return new Symbol(sym.PARENTESISC, yycolumn, yyline, yytext());
            }
            // fall through
          case 112: break;
          case 24:
            { return new Symbol(sym.IGUAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 113: break;
          case 25:
            { yybegin(CONSULTA);return new Symbol(sym.CORCHETEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 114: break;
          case 26:
            { return new Symbol(sym.FINE,yycolumn,yyline,yytext());
            }
            // fall through
          case 115: break;
          case 27:
            { return new Symbol(sym.INICIOE,yycolumn,yyline,yytext());
            }
            // fall through
          case 116: break;
          case 28:
            { return new Symbol(sym.DE,yycolumn,yyline,yytext());
            }
            // fall through
          case 117: break;
          case 29:
            { return new Symbol(sym.IDP,yycolumn,yyline,yytext());
            }
            // fall through
          case 118: break;
          case 30:
            { return new Symbol(sym.BOOL,yycolumn,yyline,yytext());
            }
            // fall through
          case 119: break;
          case 31:
            { return new Symbol(sym.DEC, yycolumn,yyline,yytext());
            }
            // fall through
          case 120: break;
          case 32:
            { return new Symbol(sym.MENORIGUAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 121: break;
          case 33:
            { return new Symbol(sym.MAYORIGUAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 122: break;
          case 34:
            { return new Symbol(sym.OROP,yycolumn,yyline,yytext());
            }
            // fall through
          case 123: break;
          case 35:
            { return new Symbol(sym.URLC,yycolumn,yyline,yytext());
            }
            // fall through
          case 124: break;
          case 36:
            { return new Symbol(sym.AND,yycolumn,yyline,yytext());
            }
            // fall through
          case 125: break;
          case 37:
            { return new Symbol(sym.NOT,yycolumn,yyline,yytext());
            }
            // fall through
          case 126: break;
          case 38:
            { return new Symbol(sym.TEMA,yycolumn,yyline,yytext());
            }
            // fall through
          case 127: break;
          case 39:
            { return new Symbol(sym.TEMAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 128: break;
          case 40:
            { return new Symbol(sym.WHERE,yycolumn,yyline,yytext());
            }
            // fall through
          case 129: break;
          case 41:
            { return new Symbol(sym.CLASEBOTON,yycolumn,yyline,yytext());
            }
            // fall through
          case 130: break;
          case 42:
            { return new Symbol(sym.CLASE,yycolumn,yyline,yytext());
            }
            // fall through
          case 131: break;
          case 43:
            { return new Symbol(sym.CLASEOPCIONES,yycolumn,yyline,yytext());
            }
            // fall through
          case 132: break;
          case 44:
            { return new Symbol(sym.FILAS,yycolumn,yyline,yytext());
            }
            // fall through
          case 133: break;
          case 45:
            { return new Symbol(sym.ALINEA,yycolumn,yyline,yytext());
            }
            // fall through
          case 134: break;
          case 46:
            { return new Symbol(sym.CLASEIMAGEN,yycolumn,yyline,yytext());
            }
            // fall through
          case 135: break;
          case 47:
            { return new Symbol(sym.INDICEC,yycolumn,yyline,yytext());
            }
            // fall through
          case 136: break;
          case 48:
            { return new Symbol(sym.NOMBREP,yycolumn,yyline,yytext());
            }
            // fall through
          case 137: break;
          case 49:
            { return new Symbol(sym.TITULOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 138: break;
          case 50:
            { return new Symbol(sym.CLASENORMAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 139: break;
          case 51:
            { return new Symbol(sym.USUARIOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 140: break;
          case 52:
            { return new Symbol(sym.URL, yycolumn,yyline,yytext());
            }
            // fall through
          case 141: break;
          case 53:
            { return new Symbol(sym.COLUMNAS,yycolumn,yyline,yytext());
            }
            // fall through
          case 142: break;
          case 54:
            { return new Symbol(sym.OPCIONES,yycolumn,yyline,yytext());
            }
            // fall through
          case 143: break;
          case 55:
            { return new Symbol(sym.CONTRAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 144: break;
          case 56:
            { return new Symbol(sym.CONSULTASP,yycolumn,yyline,yytext());
            }
            // fall through
          case 145: break;
          case 57:
            { return new Symbol(sym.REQUERIDO,yycolumn,yyline,yytext());
            }
            // fall through
          case 146: break;
          case 58:
            { return new Symbol(sym.FECHA,yycolumn,yyline,yytext());
            }
            // fall through
          case 147: break;
          case 59:
            { return new Symbol(sym.ALINEAC,yycolumn,yyline,yytext());
            }
            // fall through
          case 148: break;
          case 60:
            { return new Symbol(sym.CLASEAREA,yycolumn,yyline,yytext());
            }
            // fall through
          case 149: break;
          case 61:
            { return new Symbol(sym.NOCONSULTA,yycolumn,yyline,yytext());
            }
            // fall through
          case 150: break;
          case 62:
            { return new Symbol(sym.FORMULARIOC,yycolumn,yyline,yytext());
            }
            // fall through
          case 151: break;
          case 63:
            { return new Symbol(sym.NOMBREC,yycolumn,yyline,yytext());
            }
            // fall through
          case 152: break;
          case 64:
            { return new Symbol(sym.FINS,yycolumn,yyline,yytext());
            }
            // fall through
          case 153: break;
          case 65:
            { return new Symbol(sym.CREARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 154: break;
          case 66:
            { return new Symbol(sym.LOGINU,yycolumn,yyline,yytext());
            }
            // fall through
          case 155: break;
          case 67:
            { return new Symbol(sym.TEXTOVC,yycolumn,yyline,yytext());
            }
            // fall through
          case 156: break;
          case 68:
            { return new Symbol(sym.USUARIONP,yycolumn,yyline,yytext());
            }
            // fall through
          case 157: break;
          case 69:
            { return new Symbol(sym.INICIOS, yycolumn, yyline, yytext());
            }
            // fall through
          case 158: break;
          case 70:
            { return new Symbol(sym.FECHACP,yycolumn,yyline,yytext());
            }
            // fall through
          case 159: break;
          case 71:
            { return new Symbol(sym.NUEVOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 160: break;
          case 72:
            { yybegin(CONSULTA); return new Symbol(sym.SELECT,yycolumn,yyline,yytext());
            }
            // fall through
          case 161: break;
          case 73:
            { return new Symbol(sym.FINSOLICITUDES, yycolumn, yyline, yytext());
            }
            // fall through
          case 162: break;
          case 74:
            { return new Symbol(sym.SOLICITUDESP, yycolumn, yyline, yytext());
            }
            // fall through
          case 163: break;
          case 75:
            { return new Symbol(sym.CONSULTARD,yycolumn,yyline,yytext());
            }
            // fall through
          case 164: break;
          case 76:
            { return new Symbol(sym.USUARIOAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 165: break;
          case 77:
            { return new Symbol(sym.ELIMINARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 166: break;
          case 78:
            { return new Symbol(sym.NUEVOFP,yycolumn,yyline,yytext());
            }
            // fall through
          case 167: break;
          case 79:
            { return new Symbol(sym.USUARIOCP,yycolumn,yyline,yytext());
            }
            // fall through
          case 168: break;
          case 80:
            { return new Symbol(sym.MODIFICARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 169: break;
          case 81:
            { return new Symbol(sym.AGREGARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 170: break;
          case 82:
            { return new Symbol(sym.FECHAMP,yycolumn,yyline,yytext());
            }
            // fall through
          case 171: break;
          case 83:
            { return new Symbol(sym.ELIMINARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 172: break;
          case 84:
            { return new Symbol(sym.ELIMINARF,yycolumn,yyline,yytext());
            }
            // fall through
          case 173: break;
          case 85:
            { return new Symbol(sym.CREDENCIALES,yycolumn,yyline,yytext());
            }
            // fall through
          case 174: break;
          case 86:
            { return new Symbol(sym.MODIFICARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 175: break;
          case 87:
            { return new Symbol(sym.MODIFICARF,yycolumn,yyline,yytext());
            }
            // fall through
          case 176: break;
          case 88:
            { return new Symbol(sym.PARAMC,yycolumn,yyline,yytext());
            }
            // fall through
          case 177: break;
          case 89:
            { return new Symbol(sym.PARAMF,yycolumn,yyline,yytext());
            }
            // fall through
          case 178: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
