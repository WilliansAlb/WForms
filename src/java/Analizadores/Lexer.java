// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: src/Analizadores/Lexer.flex

package Analizadores;
import java_cup.runtime.Symbol;

// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
public class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;
  public static final int CONSULTA = 2;
  public static final int STRING = 4;
  public static final int RESTRICCION = 6;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\37\u0100\1\u0200\267\u0100\10\u0300\u1020\u0100";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\2\1\2\2\1\1\22\0\1\3\1\4\1\5"+
    "\1\6\1\7\2\6\1\10\1\11\1\12\2\0\1\13"+
    "\1\14\1\15\1\16\1\17\1\20\1\21\1\22\5\23"+
    "\1\24\1\25\1\0\1\26\1\27\1\30\1\0\1\6"+
    "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40"+
    "\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\63\1\0\1\64\1\0\1\65\1\0"+
    "\1\66\1\67\1\70\1\71\1\72\1\73\1\61\1\74"+
    "\1\75\1\61\1\76\1\77\1\100\1\101\1\102\1\103"+
    "\1\61\1\104\1\105\1\106\1\107\1\61\1\110\3\61"+
    "\1\111\1\112\1\113\7\0\1\2\72\0\100\114\u0119\0"+
    "\1\10\16\0\2\2\326\0\u0100\2";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[1024];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\1\1\1\2\1\3\1\1\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\2\5\1\12\1\13\1\14\1\15"+
    "\1\2\1\16\1\17\2\5\1\20\1\5\1\21\2\22"+
    "\26\5\1\23\1\24\1\25\1\26\2\22\1\10\1\27"+
    "\1\11\3\5\1\30\1\31\1\32\2\5\1\33\1\5"+
    "\1\0\1\5\1\34\1\22\1\0\21\5\1\35\6\5"+
    "\1\36\6\5\1\36\6\5\1\37\1\40\1\41\2\5"+
    "\1\42\3\5\1\22\1\0\45\5\1\43\3\5\1\37"+
    "\1\44\1\45\3\5\1\22\1\0\3\5\1\46\35\5"+
    "\1\47\6\5\1\50\1\5\1\0\3\5\1\51\3\5"+
    "\1\52\1\5\1\53\7\5\1\54\26\5\1\0\4\5"+
    "\1\55\12\5\1\56\1\57\4\5\1\60\7\5\1\61"+
    "\5\5\1\0\14\5\1\62\14\5\1\0\1\5\1\63"+
    "\1\0\3\5\1\64\4\5\1\65\15\5\1\66\1\5"+
    "\1\67\1\5\1\34\2\5\1\0\13\5\1\70\15\5"+
    "\1\71\1\34\4\5\1\0\2\5\1\72\1\5\1\73"+
    "\1\74\1\5\1\75\10\5\1\76\6\5\1\0\7\5"+
    "\1\62\20\5\1\34\23\5\1\77\4\5\1\34\4\5"+
    "\1\100\3\5\1\101\6\5\1\102\7\5\1\34\1\103"+
    "\2\5\1\104\1\5\1\105\7\5\1\106\5\5\1\107"+
    "\2\5\1\110\2\5\1\111\1\112\1\5\1\113\13\5"+
    "\1\114\5\5\1\115\4\5\1\116\2\5\1\117\7\5"+
    "\1\120\2\5\1\121\3\5\1\122\5\5\1\123\1\124"+
    "\4\5\1\125\1\126\1\127\2\5\1\130\1\131";

  private static int [] zzUnpackAction() {
    int [] result = new int[571];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\115\0\232\0\347\0\u0134\0\u0181\0\u01ce\0\u021b"+
    "\0\u0134\0\u0268\0\u0134\0\u0268\0\u02b5\0\u0134\0\u0302\0\u034f"+
    "\0\u0134\0\u0134\0\u0134\0\u0134\0\u039c\0\u0134\0\u03e9\0\u0436"+
    "\0\u0483\0\u0134\0\u04d0\0\u0134\0\u051d\0\u056a\0\u05b7\0\u0604"+
    "\0\u0651\0\u069e\0\u06eb\0\u0738\0\u0785\0\u07d2\0\u081f\0\u086c"+
    "\0\u08b9\0\u0906\0\u0953\0\u09a0\0\u09ed\0\u0a3a\0\u0a87\0\u0ad4"+
    "\0\u0b21\0\u0b6e\0\u0bbb\0\u0c08\0\u0181\0\u0134\0\u0134\0\u0134"+
    "\0\u0c55\0\u0ca2\0\u0cef\0\u0134\0\u0d3c\0\u0d89\0\u0dd6\0\u0e23"+
    "\0\u0134\0\u0134\0\u0134\0\u0e70\0\u0ebd\0\u0134\0\u0f0a\0\u0f57"+
    "\0\u0fa4\0\u0f57\0\u0ff1\0\u103e\0\u108b\0\u10d8\0\u1125\0\u1172"+
    "\0\u11bf\0\u120c\0\u1259\0\u12a6\0\u12f3\0\u1340\0\u138d\0\u13da"+
    "\0\u1427\0\u1474\0\u14c1\0\u150e\0\u155b\0\u0785\0\u15a8\0\u15f5"+
    "\0\u1642\0\u168f\0\u16dc\0\u1729\0\u1776\0\u17c3\0\u1810\0\u185d"+
    "\0\u18aa\0\u18f7\0\u1944\0\u0785\0\u1991\0\u19de\0\u1a2b\0\u1a78"+
    "\0\u1ac5\0\u1b12\0\u1b5f\0\u0134\0\u0134\0\u1bac\0\u1bf9\0\u0268"+
    "\0\u1c46\0\u1c93\0\u1ce0\0\u1d2d\0\u1d7a\0\u1dc7\0\u1e14\0\u1e61"+
    "\0\u1eae\0\u1efb\0\u1f48\0\u1f95\0\u1fe2\0\u202f\0\u207c\0\u20c9"+
    "\0\u2116\0\u2163\0\u21b0\0\u21fd\0\u224a\0\u2297\0\u22e4\0\u2331"+
    "\0\u237e\0\u23cb\0\u2418\0\u2465\0\u24b2\0\u24ff\0\u254c\0\u2599"+
    "\0\u25e6\0\u2633\0\u2680\0\u26cd\0\u271a\0\u2767\0\u27b4\0\u2801"+
    "\0\u284e\0\u289b\0\u0785\0\u28e8\0\u2935\0\u2982\0\u29cf\0\u0268"+
    "\0\u0268\0\u2a1c\0\u2a69\0\u2ab6\0\u2b03\0\u2b50\0\u2b9d\0\u2bea"+
    "\0\u2c37\0\u0785\0\u2c84\0\u2cd1\0\u2d1e\0\u2d6b\0\u2db8\0\u2e05"+
    "\0\u2e52\0\u2e9f\0\u2eec\0\u2f39\0\u2f86\0\u2fd3\0\u3020\0\u306d"+
    "\0\u30ba\0\u3107\0\u3154\0\u31a1\0\u31ee\0\u323b\0\u3288\0\u32d5"+
    "\0\u3322\0\u336f\0\u33bc\0\u3409\0\u3456\0\u34a3\0\u34f0\0\u0785"+
    "\0\u353d\0\u358a\0\u35d7\0\u3624\0\u3671\0\u36be\0\u0268\0\u370b"+
    "\0\u3758\0\u37a5\0\u37f2\0\u383f\0\u0785\0\u388c\0\u38d9\0\u3926"+
    "\0\u0785\0\u3973\0\u0785\0\u39c0\0\u3a0d\0\u3a5a\0\u3aa7\0\u3af4"+
    "\0\u3b41\0\u3b8e\0\u0785\0\u3bdb\0\u3c28\0\u3c75\0\u3cc2\0\u3d0f"+
    "\0\u3d5c\0\u3da9\0\u3df6\0\u3e43\0\u3e90\0\u3edd\0\u3f2a\0\u3f77"+
    "\0\u3fc4\0\u4011\0\u405e\0\u40ab\0\u40f8\0\u4145\0\u4192\0\u41df"+
    "\0\u422c\0\u4279\0\u42c6\0\u4313\0\u4360\0\u43ad\0\u0785\0\u43fa"+
    "\0\u4447\0\u4494\0\u44e1\0\u452e\0\u457b\0\u45c8\0\u4615\0\u4662"+
    "\0\u46af\0\u0785\0\u0785\0\u46fc\0\u4749\0\u4796\0\u47e3\0\u4830"+
    "\0\u487d\0\u48ca\0\u4917\0\u4964\0\u49b1\0\u49fe\0\u4a4b\0\u0785"+
    "\0\u4a98\0\u4ae5\0\u4b32\0\u4b7f\0\u4bcc\0\u4c19\0\u4c66\0\u4cb3"+
    "\0\u4d00\0\u4d4d\0\u4d9a\0\u4de7\0\u4e34\0\u4e81\0\u4ece\0\u4f1b"+
    "\0\u4f68\0\u4fb5\0\u0785\0\u5002\0\u504f\0\u509c\0\u50e9\0\u5136"+
    "\0\u5183\0\u51d0\0\u521d\0\u526a\0\u52b7\0\u5304\0\u5351\0\u539e"+
    "\0\u53eb\0\u5438\0\u5485\0\u54d2\0\u551f\0\u556c\0\u55b9\0\u5606"+
    "\0\u5653\0\u56a0\0\u56ed\0\u0785\0\u573a\0\u5787\0\u57d4\0\u5821"+
    "\0\u586e\0\u58bb\0\u5908\0\u5955\0\u59a2\0\u59ef\0\u5a3c\0\u5a89"+
    "\0\u5ad6\0\u0785\0\u5b23\0\u0785\0\u5b70\0\u5bbd\0\u5c0a\0\u5c57"+
    "\0\u5ca4\0\u5cf1\0\u5d3e\0\u5d8b\0\u5dd8\0\u5e25\0\u5e72\0\u5ebf"+
    "\0\u5f0c\0\u5f59\0\u5fa6\0\u5ff3\0\u0785\0\u6040\0\u608d\0\u60da"+
    "\0\u6127\0\u6174\0\u61c1\0\u620e\0\u625b\0\u62a8\0\u62f5\0\u6342"+
    "\0\u638f\0\u63dc\0\u0785\0\u6429\0\u6476\0\u64c3\0\u6510\0\u655d"+
    "\0\u65aa\0\u65f7\0\u6644\0\u0fa4\0\u6691\0\u0785\0\u0fa4\0\u66de"+
    "\0\u5fa6\0\u672b\0\u6778\0\u67c5\0\u6812\0\u685f\0\u68ac\0\u68f9"+
    "\0\u6946\0\u0785\0\u6993\0\u69e0\0\u6a2d\0\u6a7a\0\u6ac7\0\u6b14"+
    "\0\u6b61\0\u6bae\0\u6bfb\0\u6c48\0\u6c95\0\u6ce2\0\u6d2f\0\u6d7c"+
    "\0\u0fa4\0\u6dc9\0\u6e16\0\u6e63\0\u6eb0\0\u6efd\0\u6f4a\0\u6f97"+
    "\0\u6fe4\0\u7031\0\u707e\0\u70cb\0\u7118\0\u7165\0\u71b2\0\u71ff"+
    "\0\u724c\0\u7299\0\u72e6\0\u7333\0\u7380\0\u73cd\0\u741a\0\u7467"+
    "\0\u74b4\0\u7501\0\u754e\0\u759b\0\u75e8\0\u7635\0\u7682\0\u76cf"+
    "\0\u771c\0\u7769\0\u77b6\0\u7803\0\u7850\0\u0fa4\0\u789d\0\u78ea"+
    "\0\u7937\0\u7984\0\u79d1\0\u7a1e\0\u7a6b\0\u7ab8\0\u7b05\0\u7b52"+
    "\0\u7b9f\0\u7bec\0\u7c39\0\u0fa4\0\u7c86\0\u7cd3\0\u7d20\0\u7d6d"+
    "\0\u7dba\0\u7e07\0\u0fa4\0\u7e54\0\u7ea1\0\u7eee\0\u7f3b\0\u7f88"+
    "\0\u7fd5\0\u8022\0\u806f\0\u0fa4\0\u80bc\0\u8109\0\u0fa4\0\u8156"+
    "\0\u0268\0\u81a3\0\u81f0\0\u823d\0\u828a\0\u82d7\0\u8324\0\u8371"+
    "\0\u0fa4\0\u83be\0\u840b\0\u8458\0\u84a5\0\u84f2\0\u0fa4\0\u853f"+
    "\0\u858c\0\u0f57\0\u85d9\0\u8626\0\u0268\0\u0268\0\u8673\0\u0fa4"+
    "\0\u86c0\0\u870d\0\u875a\0\u87a7\0\u87f4\0\u8841\0\u888e\0\u88db"+
    "\0\u8928\0\u8975\0\u89c2\0\u0fa4\0\u8a0f\0\u8a5c\0\u8aa9\0\u8af6"+
    "\0\u8b43\0\u0fa4\0\u8b90\0\u8bdd\0\u8c2a\0\u8c77\0\u0fa4\0\u8cc4"+
    "\0\u8d11\0\u0fa4\0\u8d5e\0\u8dab\0\u8df8\0\u8e45\0\u8e92\0\u8edf"+
    "\0\u8f2c\0\u0fa4\0\u8f79\0\u8fc6\0\u0fa4\0\u9013\0\u9060\0\u90ad"+
    "\0\u0fa4\0\u90fa\0\u9147\0\u9194\0\u91e1\0\u922e\0\u0fa4\0\u0fa4"+
    "\0\u927b\0\u92c8\0\u9315\0\u9362\0\u0fa4\0\u0fa4\0\u0fa4\0\u93af"+
    "\0\u93fc\0\u0fa4\0\u0fa4";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[571];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\5\1\6\1\0\1\7\1\10\1\11\1\12\4\5"+
    "\1\13\1\12\2\5\6\12\1\14\1\15\1\5\1\16"+
    "\5\12\1\17\2\12\1\20\21\12\1\21\1\22\6\12"+
    "\1\17\1\12\1\20\13\12\1\23\1\6\1\24\2\5"+
    "\1\6\1\0\1\25\1\5\1\26\1\12\1\27\3\5"+
    "\1\13\1\30\2\5\7\12\3\5\26\12\1\31\3\12"+
    "\1\32\1\5\1\33\23\12\1\5\1\6\3\5\1\6"+
    "\1\0\1\7\1\5\1\26\1\12\1\27\1\34\3\5"+
    "\1\33\2\5\1\35\2\36\3\35\1\12\3\5\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\2\45\1\46\1\47"+
    "\1\45\1\50\1\51\1\52\1\53\1\54\1\45\1\55"+
    "\1\56\1\57\1\60\1\45\1\61\3\45\2\5\1\33"+
    "\1\45\1\62\1\45\1\63\2\45\1\64\13\45\1\61"+
    "\1\5\1\65\3\5\1\6\1\0\1\25\2\5\1\12"+
    "\1\27\1\66\1\67\1\70\1\13\1\30\2\5\1\71"+
    "\5\72\1\12\1\73\1\74\1\75\1\76\14\12\1\77"+
    "\1\100\13\12\1\5\1\101\1\33\23\12\1\5\1\6"+
    "\2\5\116\0\1\6\110\0\1\6\5\0\1\7\141\0"+
    "\1\102\72\0\1\12\5\0\1\12\2\0\7\12\3\0"+
    "\32\12\2\0\24\12\10\0\1\103\116\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\10\12\1\104\21\12\2\0"+
    "\10\12\1\104\13\12\12\0\1\12\5\0\1\12\2\0"+
    "\7\12\3\0\15\12\1\105\14\12\2\0\14\12\1\105"+
    "\7\12\7\0\1\25\120\0\1\27\4\0\1\27\2\0"+
    "\6\27\4\0\32\27\2\0\24\27\12\0\1\12\1\27"+
    "\4\0\1\33\2\0\6\33\1\12\2\0\1\106\32\33"+
    "\2\0\24\33\12\0\1\12\5\0\1\12\2\0\7\12"+
    "\3\0\7\12\1\107\22\12\2\0\24\12\12\0\1\12"+
    "\1\27\4\0\1\33\2\0\6\33\1\12\3\0\32\33"+
    "\2\0\24\33\7\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\6\35\1\111\3\0\32\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\1\113\4\35\1\113\1\111\3\0\32\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\6\45\1\115\4\45\1\116"+
    "\5\45\1\117\10\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\13\45\1\120\2\45\1\121\13\45\2\0"+
    "\1\111\11\45\1\120\11\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\1\122\3\45\1\123\2\45\1\124\3\45\1\125\2\45"+
    "\1\126\2\45\1\127\10\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\1\130\3\45\1\131\25\45\2\0"+
    "\1\111\1\130\22\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\13\45"+
    "\1\132\16\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\4\45\1\133\3\45\1\134\5\45\1\135\13\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\32\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\3\45"+
    "\1\136\10\45\1\137\1\140\13\45\1\141\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\24\45\1\142\5\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\16\45"+
    "\1\143\13\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\16\45\1\144\13\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\16\45\1\145\5\45\1\146\5\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\17\45"+
    "\1\147\12\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\1\150\31\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\1\151\3\45\1\152\25\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\4\45\1\153\3\45"+
    "\1\154\21\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\4\45\1\155\3\45\1\156\21\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\21\45\1\157\1\160"+
    "\7\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\7\45\1\161\22\45\2\0\1\111\6\45\1\161\14\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\13\45\1\120\16\45\2\0"+
    "\1\111\11\45\1\120\11\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\1\130\31\45\2\0\1\111\1\130\22\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\32\45\2\0\1\111\20\45\1\162\2\45"+
    "\3\0\1\112\6\0\1\12\5\0\1\12\2\0\6\71"+
    "\1\12\3\0\32\12\2\0\24\12\12\0\1\12\5\0"+
    "\1\12\1\163\1\0\6\72\1\12\3\0\32\12\2\0"+
    "\24\12\33\0\1\164\114\0\1\165\73\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\15\12\1\166\14\12\2\0"+
    "\24\12\12\0\1\12\5\0\1\12\2\0\7\12\3\0"+
    "\16\12\1\167\13\12\2\0\24\12\12\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\21\12\1\170\10\12\2\0"+
    "\24\12\12\0\1\12\5\0\1\12\2\0\7\12\3\0"+
    "\15\12\1\171\14\12\2\0\14\12\1\171\7\12\12\0"+
    "\1\12\5\0\1\12\2\0\7\12\3\0\10\12\1\172"+
    "\21\12\2\0\10\12\1\172\13\12\12\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\4\12\1\173\25\12\2\0"+
    "\24\12\7\0\1\110\2\0\1\112\5\0\1\110\2\0"+
    "\7\112\3\0\32\112\2\0\24\112\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\32\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\3\174\2\35\1\174\1\111"+
    "\3\0\32\111\2\0\24\111\3\0\1\112\31\0\32\175"+
    "\3\0\23\175\7\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\21\45\1\176\10\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\10\45\1\177"+
    "\21\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\4\45\1\200\25\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\24\45\1\201\5\45\2\0\1\111\21\45"+
    "\1\201\1\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\23\45\1\202"+
    "\6\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\14\45\1\203\15\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\15\45\1\204\14\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\4\45\1\205\25\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\1\206\31\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\13\45"+
    "\1\207\1\210\1\211\14\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\4\45\1\212\25\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\21\45\1\213\10\45"+
    "\2\0\1\111\16\45\1\213\4\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\21\45\1\214\10\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\10\45\1\215\21\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\2\45\1\216\27\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\2\45"+
    "\1\217\10\45\1\220\16\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\21\45\1\221\10\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\1\222\31\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\3\45\1\223"+
    "\26\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\20\45\1\224\11\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\22\45\1\225\7\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\6\45\1\226\23\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\3\45\1\227"+
    "\26\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\14\45\1\230\15\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\4\45\1\231\25\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\2\45\1\232\27\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\21\45\1\233"+
    "\1\234\7\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\3\45\1\235\26\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\20\45\1\236\11\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\13\45\1\237\16\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\14\45"+
    "\1\240\12\45\1\241\2\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\23\45\1\242\6\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\13\45\1\243\16\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\24\45"+
    "\1\244\5\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\10\45\1\245\21\45\2\0\1\111\7\45\1\245"+
    "\13\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\32\45\2\0\1\111"+
    "\20\45\1\246\2\45\3\0\1\112\15\0\1\163\1\0"+
    "\6\247\76\0\1\12\5\0\1\12\2\0\7\12\3\0"+
    "\3\12\1\250\26\12\2\0\24\12\12\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\23\12\1\251\6\12\2\0"+
    "\24\12\12\0\1\12\5\0\1\12\2\0\7\12\3\0"+
    "\32\12\2\0\1\252\23\12\12\0\1\12\5\0\1\12"+
    "\2\0\7\12\3\0\32\12\2\0\1\253\23\12\12\0"+
    "\1\12\5\0\1\12\2\0\7\12\3\0\21\12\1\254"+
    "\10\12\2\0\24\12\7\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\6\255\1\111\3\0\32\111\2\0\24\111"+
    "\3\0\1\112\15\0\1\256\13\0\32\175\3\0\23\175"+
    "\7\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\4\45\1\257\25\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\15\45\1\260\14\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\1\261\31\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\4\45"+
    "\1\262\25\45\2\0\1\111\4\45\1\262\16\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\16\45\1\263\13\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\17\45\1\264\12\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\23\45"+
    "\1\265\6\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\2\45\1\266\27\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\22\45\1\267\7\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\24\45\1\270\5\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\1\45"+
    "\1\271\30\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\22\45\1\272\7\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\1\273\2\45\1\274\26\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\12\45\1\262"+
    "\17\45\2\0\1\111\10\45\1\262\12\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\4\45\1\275\25\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\14\45\1\276\15\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\7\45\1\277"+
    "\22\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\7\45\1\300\22\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\1\301\31\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\14\45\1\302\15\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\6\45\1\303\23\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\10\45"+
    "\1\304\21\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\24\45\1\305\5\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\23\45\1\306\6\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\10\45\1\307\21\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\10\45"+
    "\1\310\21\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\1\45\1\311\30\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\25\45\1\312\4\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\10\45\1\313\21\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\1\314"+
    "\31\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\22\45\1\315\7\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\10\45\1\271\21\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\24\45\1\316\5\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\4\45\1\317"+
    "\25\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\1\320\31\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\23\45\1\321\6\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\24\45\1\322\5\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\1\323\31\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\23\45\1\201"+
    "\6\45\2\0\1\111\20\45\1\201\2\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\32\45\2\0\1\111\15\45\1\324\5\45"+
    "\3\0\1\112\17\0\6\247\76\0\1\12\5\0\1\12"+
    "\2\0\7\12\3\0\22\12\1\325\7\12\2\0\20\12"+
    "\1\325\3\12\12\0\1\12\5\0\1\12\2\0\7\12"+
    "\3\0\22\12\1\326\7\12\2\0\20\12\1\326\3\12"+
    "\12\0\1\12\5\0\1\12\2\0\7\12\3\0\4\12"+
    "\1\327\25\12\2\0\24\12\7\0\1\110\2\0\1\111"+
    "\5\0\1\330\2\0\6\35\1\111\3\0\32\111\2\0"+
    "\24\111\3\0\1\112\70\0\1\331\27\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\6\45"+
    "\1\332\23\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\4\45\1\333\25\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\32\45\2\0\1\334\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\15\45\1\335\14\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\16\45\1\336\13\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\21\45"+
    "\1\337\10\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\12\45\1\340\17\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\4\45\1\341\25\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\14\45\1\342\15\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\16\45"+
    "\1\343\13\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\24\45\1\344\5\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\21\45\1\345\10\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\4\45\1\346\25\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\2\45"+
    "\1\347\27\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\10\45\1\350\21\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\1\351\31\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\4\45\1\352\25\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\22\45\1\353"+
    "\7\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\24\45\1\354\5\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\4\45\1\355\25\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\2\45\1\356\27\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\10\45\1\357"+
    "\21\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\10\45\1\360\21\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\15\45\1\361\14\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\5\45\1\362\24\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\21\45\1\363"+
    "\10\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\16\45\1\364\13\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\16\45\1\365\13\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\14\45\1\366\15\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\26\45\1\367"+
    "\3\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\4\45\1\370\25\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\2\45\1\371\27\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\16\45\1\372\13\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\13\45\1\373"+
    "\16\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\21\45\1\374\10\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\32\45\2\0\1\111\17\45\1\375\3\45"+
    "\3\0\1\112\6\0\1\12\5\0\1\12\2\0\7\12"+
    "\3\0\16\12\1\376\13\12\2\0\15\12\1\376\6\12"+
    "\12\0\1\12\5\0\1\12\2\0\7\12\3\0\16\12"+
    "\1\377\13\12\2\0\15\12\1\377\6\12\7\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\1\u0100\1\u0101\5\111"+
    "\3\0\32\111\2\0\24\111\3\0\1\112\102\0\1\u0102"+
    "\15\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\1\u0103\31\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\1\u0104\31\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\23\111\1\u0105\6\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\32\45\2\0\1\u0106\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\16\45\1\u0107\13\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\1\45\1\u0108"+
    "\30\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\15\45\1\u0109\14\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\13\45\1\u010a\16\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\32\45\2\0\1\u010b\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\15\45\1\u010c\14\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\7\45\1\u010d"+
    "\22\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\15\45\1\u010e\14\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\32\45\2\0\1\u010f\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\21\45\1\u0110\10\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\13\45\1\u0111\16\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\15\45\1\u0112"+
    "\14\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\4\45\1\u0113\25\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\4\45\1\u0114\25\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\5\45\1\u0115\24\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\32\45\2\0"+
    "\1\u0116\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\10\45\1\u0117"+
    "\21\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\4\45\1\u0118\25\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\32\45\2\0\1\u0119\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\15\45\1\u011a\14\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\4\45\1\u011b\25\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\16\45\1\u011c"+
    "\13\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\21\45\1\u011d\10\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\23\45\1\u011e\6\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\32\45\2\0\1\u011f\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\16\45\1\u0120\13\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\10\45\1\u0121"+
    "\21\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\6\111\1\u0122"+
    "\3\0\32\45\2\0\1\111\23\45\3\0\1\112\6\0"+
    "\1\12\5\0\1\12\2\0\7\12\3\0\13\12\1\u0123"+
    "\16\12\2\0\12\12\1\u0123\11\12\12\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\13\12\1\u0124\16\12\2\0"+
    "\12\12\1\u0124\11\12\7\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\1\111\5\u0125\1\111\3\0\32\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\3\u0125\4\111\3\0\32\111\2\0\24\111"+
    "\3\0\1\112\100\0\1\u0126\17\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\21\45\1\u0127"+
    "\10\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\2\45\1\u0128\27\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\4\111\1\u0129\25\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\23\111\1\u012a\6\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\16\45\1\u012b\13\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\1\u012c\31\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\23\45\1\u012d\6\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\24\111\1\u012e"+
    "\5\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\2\45"+
    "\1\u012f\27\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\1\u0107\31\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\1\u0130\31\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\2\111\1\u0131\11\111\1\u0132\15\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\16\45\1\u0133\13\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\1\u0134"+
    "\31\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\21\45\1\u0135\10\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\10\45\1\u0136\21\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\24\111\1\u0137\5\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\2\45\1\u0138\27\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\32\45\2\0"+
    "\1\u0139\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\5\111\1\u013a\11\111"+
    "\1\u013b\12\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\4\45\1\u013c\25\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\23\45\1\u013d\6\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\21\45\1\u013e\10\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\10\45\1\u013f"+
    "\21\45\2\0\1\111\23\45\3\0\1\112\3\0\1\u0140"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\32\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\25\111"+
    "\1\u0141\4\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\16\45\1\u0142\13\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\0\1\u0143"+
    "\7\111\3\0\32\111\2\0\24\111\3\0\1\112\6\0"+
    "\1\12\5\0\1\12\2\0\7\12\3\0\10\12\1\u0144"+
    "\21\12\2\0\10\12\1\u0144\13\12\12\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\10\12\1\u0145\21\12\2\0"+
    "\10\12\1\u0145\13\12\7\0\1\110\2\0\1\111\5\0"+
    "\1\u0146\2\0\7\111\3\0\32\111\2\0\24\111\3\0"+
    "\1\112\16\0\1\u0147\101\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\32\45\2\0\1\u0148"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\10\45\1\u0149\21\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\27\111\1\u014a"+
    "\2\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\4\111\1\u014b"+
    "\25\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\27\45"+
    "\1\343\2\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\22\45\1\u014c\7\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\1\u014d\31\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\22\111\1\u014e\7\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\10\45\1\u014f\21\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\21\45\1\u0150"+
    "\10\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\21\111"+
    "\1\u0151\10\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\16\111"+
    "\1\u0152\13\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\21\45\1\u0153\10\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\3\45\1\u010d\26\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\2\45\1\u0154\27\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\22\111\1\u0155\7\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\1\u0156\31\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\2\111\1\u0157"+
    "\27\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\16\111\1\u0158"+
    "\13\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\1\u0159\31\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\22\45\1\u015a"+
    "\7\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\21\45\1\u015b\10\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\1\114\1\0"+
    "\7\111\3\0\3\45\1\u015c\26\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\3\45\1\u015d\26\45\2\0"+
    "\1\111\23\45\3\0\1\112\3\0\1\110\2\0\1\112"+
    "\5\0\1\110\2\0\7\112\3\0\23\112\1\u015e\6\112"+
    "\2\0\24\112\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\10\111\1\u015f\21\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\32\45\2\0"+
    "\1\u0160\23\45\3\0\1\112\16\0\1\u0161\104\0\1\12"+
    "\5\0\1\12\2\0\7\12\3\0\2\12\1\u0162\27\12"+
    "\2\0\3\12\1\u0162\20\12\12\0\1\12\5\0\1\12"+
    "\2\0\7\12\3\0\2\12\1\u0163\27\12\2\0\3\12"+
    "\1\u0163\20\12\7\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\1\u0164\2\u0165\1\u0166\3\111\3\0\32\111\2\0"+
    "\24\111\3\0\1\112\6\0\1\u0147\5\0\1\u0147\1\0"+
    "\10\u0147\3\0\32\u0147\2\0\24\u0147\7\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\2\111\1\u0167"+
    "\27\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\16\45"+
    "\1\u0168\13\45\2\0\1\111\23\45\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\23\111\1\u0169\6\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\27\111\1\u016a\2\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\u016b\1\114\1\0\7\111"+
    "\3\0\21\45\1\u016c\1\u016d\7\45\2\0\1\111\23\45"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\24\111\1\u016e\5\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\1\114\1\0\7\111\3\0\1\u016f\31\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\32\45\2\0\1\u0170"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\4\111\1\u0171\25\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\3\111\1\u0172\26\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\10\45\1\u0173\21\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\1\u0174"+
    "\31\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\24\111"+
    "\1\u0175\5\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\21\45\1\u0176\10\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\1\u0177\31\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\21\111\1\u0178\10\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\22\111\1\u0179\7\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\16\45\1\u017a\13\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\16\45\1\u017b\13\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\112\5\0"+
    "\1\110\2\0\7\112\3\0\16\112\1\u017c\13\112\2\0"+
    "\24\112\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\22\111\1\u017d\7\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\1\u017e\1\111\1\u017f\12\111"+
    "\1\u0180\14\111\2\0\24\111\3\0\1\112\31\0\32\u0181"+
    "\3\0\23\u0181\12\0\1\12\5\0\1\12\2\0\7\12"+
    "\3\0\10\12\1\u0182\21\12\2\0\10\12\1\u0182\13\12"+
    "\12\0\1\12\5\0\1\12\2\0\7\12\3\0\10\12"+
    "\1\u0183\21\12\2\0\10\12\1\u0183\13\12\7\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\1\111\5\u0184\1\111"+
    "\3\0\32\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\6\u0184\1\111\3\0"+
    "\32\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\2\u0184\5\111\3\0\32\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\16\111\1\u0185\13\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\15\45\1\u0186"+
    "\14\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\16\111"+
    "\1\u0187\13\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\23\111"+
    "\1\u0188\6\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\6\u0189\1\111\3\0"+
    "\32\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\1\114\1\0\7\111\3\0\32\45"+
    "\2\0\1\u018a\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\1\u018b\31\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\13\45\1\u018c"+
    "\16\45\2\0\1\111\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\2\111"+
    "\1\u018d\2\111\1\u018e\16\111\1\u018f\5\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\1\u0190\31\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\10\111\1\u0191\21\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\1\114"+
    "\1\0\7\111\3\0\16\45\1\u0192\13\45\2\0\1\111"+
    "\23\45\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\1\114\1\0\7\111\3\0\21\45\1\u0107\10\45"+
    "\2\0\1\111\23\45\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\1\u0193\31\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\32\45\2\0"+
    "\1\u0194\23\45\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\14\111\1\u0195\15\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\14\111\1\u0196\15\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\22\111\1\u0197\7\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\22\45\1\u0198"+
    "\7\45\2\0\1\111\23\45\3\0\1\112\3\0\1\u0199"+
    "\2\0\1\112\5\0\1\110\2\0\7\112\3\0\32\112"+
    "\2\0\24\112\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\10\111\1\u019a\21\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\15\111\1\u019b\14\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\21\111\1\u019c\10\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\24\111\1\u019d\5\111"+
    "\2\0\24\111\3\0\1\112\15\0\1\114\13\0\32\u0181"+
    "\3\0\23\u0181\12\0\1\12\5\0\1\12\2\0\7\12"+
    "\3\0\23\12\1\u019e\6\12\2\0\21\12\1\u019e\2\12"+
    "\12\0\1\12\5\0\1\12\2\0\7\12\3\0\23\12"+
    "\1\u019f\6\12\2\0\21\12\1\u019f\2\12\7\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\14\111"+
    "\1\u01a0\15\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\16\111"+
    "\1\u01a1\13\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\3\111"+
    "\1\u01a2\26\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\21\111"+
    "\1\u01a3\10\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\4\45\1\u01a4\25\45\2\0\1\111\23\45\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\16\111\1\u01a5\13\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\16\111\1\u01a6\13\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\22\111\1\u01a7\7\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\2\111\1\u01a8\27\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\5\111\1\u01a9\24\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\21\111\1\u01aa\10\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\2\111\1\u01ab\2\111\1\u01ac\16\111\1\u01ad\5\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\17\111\1\u01ae\12\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\24\111\1\u01af\5\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\26\111\1\u01b0\3\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\1\114\1\0\7\111\3\0\32\45\2\0"+
    "\1\u01b1\23\45\3\0\1\112\3\0\1\110\2\0\1\112"+
    "\5\0\1\110\2\0\7\112\3\0\5\112\1\u01b2\24\112"+
    "\2\0\24\112\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\1\111\1\u01b3\30\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\23\111\1\u01b4\6\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\4\111\1\u01b5\25\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\4\111\1\u01b6\25\111"+
    "\2\0\24\111\3\0\1\112\6\0\1\12\5\0\1\12"+
    "\2\0\7\12\3\0\24\12\1\u01b7\5\12\2\0\22\12"+
    "\1\u01b7\1\12\12\0\1\12\5\0\1\12\2\0\7\12"+
    "\3\0\24\12\1\u01b8\5\12\2\0\22\12\1\u01b8\1\12"+
    "\7\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\17\111\1\u01b9\12\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\1\u01ba\31\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\10\111\1\u01bb\21\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\1\114\1\0\7\111"+
    "\3\0\22\45\1\u01bc\7\45\2\0\1\111\23\45\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\14\111\1\u01bd\15\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\21\111\1\u01be\10\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\24\111\1\u01bf\5\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\10\111\1\u01c0\21\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\10\111\1\u01c1\21\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\10\111\1\u01c2\21\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\16\111\1\u01c3\13\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\16\111\1\u01c4\13\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\22\111\1\u01c5\7\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\16\111\1\u01c6\13\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\13\111\1\u01c7\16\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\16\111\1\u01c8\13\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\2\111\1\u01c9\2\111\1\u01ca\24\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\112\5\0"+
    "\1\110\2\0\7\112\3\0\16\112\1\u01cb\13\112\2\0"+
    "\24\112\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\13\111\1\u01cc\16\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\10\111\1\u01cd\21\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\1\u01ce\31\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\25\111\1\u01cf\4\111\2\0\24\111"+
    "\3\0\1\112\6\0\1\12\5\0\1\12\2\0\7\12"+
    "\3\0\3\12\1\u01d0\26\12\2\0\4\12\1\u01d0\17\12"+
    "\12\0\1\12\5\0\1\12\2\0\7\12\3\0\3\12"+
    "\1\u01d1\26\12\2\0\4\12\1\u01d1\17\12\7\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\16\111"+
    "\1\u01d2\13\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\23\111"+
    "\1\u01d3\6\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\16\111"+
    "\1\u01d4\13\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\1\114\1\0\7\111\3\0"+
    "\32\45\2\0\1\u01d5\23\45\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\17\111"+
    "\1\u01d6\12\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\14\111"+
    "\1\u01d7\15\111\2\0\24\111\3\0\1\112\3\0\1\110"+
    "\2\0\1\111\5\0\1\111\2\0\7\111\3\0\1\u01d8"+
    "\31\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\16\111\1\u01d9"+
    "\13\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\2\111\1\u01da"+
    "\27\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\16\111\1\u01db"+
    "\13\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\14\111\1\u01dc"+
    "\15\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\21\111\1\u01dd"+
    "\10\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\24\111\1\u01de"+
    "\5\111\2\0\24\111\3\0\1\112\3\0\1\110\2\0"+
    "\1\111\5\0\1\111\2\0\7\111\3\0\1\u01df\31\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\21\111\1\u01e0\10\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\16\111\1\u01e1\13\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\16\111\1\u01e2\13\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\112"+
    "\5\0\1\110\2\0\7\112\3\0\21\112\1\u01e3\10\112"+
    "\2\0\24\112\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\4\111\1\u01e4\25\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\6\111\1\u01e5\23\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\2\111\1\u01e6\27\111"+
    "\2\0\24\111\3\0\1\112\3\0\1\110\2\0\1\111"+
    "\5\0\1\111\2\0\7\111\3\0\16\111\1\u01e7\13\111"+
    "\2\0\24\111\3\0\1\112\6\0\1\12\5\0\1\12"+
    "\2\0\7\12\3\0\4\12\1\u01e8\25\12\2\0\5\12"+
    "\1\u01e8\16\12\12\0\1\12\5\0\1\12\2\0\6\12"+
    "\1\u01e9\3\0\4\12\1\u01ea\25\12\2\0\5\12\1\u01ea"+
    "\16\12\7\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\15\111\1\u01eb\14\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\16\111\1\u01ec\13\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\24\111\1\u01ed\5\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\16\111\1\u01ee\13\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\24\111\1\u01ef\5\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\21\111\1\u01f0\10\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\15\111\1\u01f1\14\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\1\u01f2\31\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\17\111\1\u01f3\12\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\14\111\1\u01f4\15\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\1\u01f5\31\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\21\111\1\u01f6\10\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\3\111\1\u01f7\26\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\14\111\1\u01f8\15\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\21\111\1\u01f9\10\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\112\5\0\1\110\2\0\7\112\3\0"+
    "\14\112\1\u01fa\15\112\2\0\24\112\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\24\111\1\u01fb\5\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\10\111\1\u01fc\21\111\2\0\24\111\3\0\1\112\6\0"+
    "\1\12\5\0\1\12\2\0\7\12\3\0\22\12\1\u01fd"+
    "\7\12\2\0\20\12\1\u01fd\3\12\12\0\1\12\5\0"+
    "\1\12\2\0\7\12\3\0\22\12\1\u01fe\7\12\2\0"+
    "\20\12\1\u01fe\3\12\7\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\4\111\1\u01ff\25\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\22\111\1\u0200\7\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\22\111\1\u0201\7\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\15\111\1\u0202\14\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\13\111\1\u0203\16\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\10\111\1\u0204\21\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\2\111\1\u0205\27\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\16\111\1\u0206\13\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\24\111\1\u0207\5\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\21\111\1\u0208\10\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\10\111\1\u0209\21\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\17\111\1\u020a\12\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\14\111\1\u020b\15\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\16\111\1\u020c\13\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\16\111\1\u020d\13\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\15\111\1\u020e\14\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\24\111\1\u020f\5\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\4\111\1\u0210\25\111\2\0"+
    "\24\111\3\0\1\112\3\0\1\110\2\0\1\111\5\0"+
    "\1\111\2\0\7\111\3\0\1\u0211\31\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\16\111\1\u0212\13\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\10\111\1\u0213\21\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\15\111\1\u0214\14\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\13\111\1\u0215\16\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\10\111\1\u0216\21\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\16\111\1\u0217\13\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\16\111\1\u0218\13\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\24\111\1\u0219\5\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\15\111\1\u021a\14\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\23\111\1\u021b\6\111\2\0\24\111"+
    "\3\0\1\112\3\0\1\110\2\0\1\111\5\0\1\111"+
    "\2\0\7\111\3\0\1\u021c\31\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\15\111\1\u021d\14\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\21\111\1\u021e\10\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\16\111\1\u021f\13\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\4\111\1\u0220\25\111\2\0\24\111\3\0"+
    "\1\112\3\0\1\110\2\0\1\111\5\0\1\111\2\0"+
    "\7\111\3\0\1\u0221\31\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\16\111\1\u0222\13\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\15\111\1\u0223\14\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\13\111\1\u0224\16\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\4\111\1\u0225\25\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\21\111\1\u0226\10\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\23\111\1\u0227\6\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\10\111\1\u0228\21\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\15\111\1\u0229\14\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\15\111\1\u022a\14\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\21\111\1\u022b\10\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\4\111\1\u022c\25\111\2\0\24\111\3\0\1\112"+
    "\3\0\1\110\2\0\1\111\5\0\1\111\2\0\7\111"+
    "\3\0\1\u022d\31\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\10\111\1\u022e\21\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\4\111\1\u022f\25\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\16\111\1\u0230\13\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\23\111\1\u0231\6\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\10\111\1\u0232\21\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\15\111\1\u0233\14\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\21\111\1\u0234\10\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\16\111\1\u0235\13\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\4\111\1\u0236\25\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\16\111\1\u0237\13\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\23\111\1\u0238\6\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\10\111\1\u0239\21\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\4\111\1\u023a\25\111\2\0\24\111\3\0\1\112\3\0"+
    "\1\110\2\0\1\111\5\0\1\111\2\0\7\111\3\0"+
    "\16\111\1\u023b\13\111\2\0\24\111\3\0\1\112";

  private static int [] zzUnpackTrans() {
    int [] result = new int[37961];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\1\11\3\1\1\11\1\1\1\11\2\1\1\11"+
    "\2\1\4\11\1\1\1\11\3\1\1\11\1\1\1\11"+
    "\31\1\3\11\3\1\1\11\4\1\3\11\2\1\1\11"+
    "\1\1\1\0\3\1\1\0\47\1\2\11\7\1\1\0"+
    "\60\1\1\0\52\1\1\0\50\1\1\0\43\1\1\0"+
    "\31\1\1\0\2\1\1\0\35\1\1\0\37\1\1\0"+
    "\27\1\1\0\242\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[571];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { return new Symbol(sym.ERRORLEX,yycolumn,yyline,yytext());
            }
            // fall through
          case 90: break;
          case 2:
            { /*Ignore*/
            }
            // fall through
          case 91: break;
          case 3:
            { /*ignore*/
            }
            // fall through
          case 92: break;
          case 4:
            { yybegin(STRING); return new Symbol(sym.COMILLAS, yycolumn, yyline, yytext());
            }
            // fall through
          case 93: break;
          case 5:
            { return new Symbol(sym.USUARIO,yycolumn,yyline,yytext());
            }
            // fall through
          case 94: break;
          case 6:
            { return new Symbol(sym.COMA, yycolumn, yyline, yytext());
            }
            // fall through
          case 95: break;
          case 7:
            { return new Symbol(sym.DOSP, yycolumn, yyline, yytext());
            }
            // fall through
          case 96: break;
          case 8:
            { return new Symbol(sym.MENORQ,yycolumn,yyline,yytext());
            }
            // fall through
          case 97: break;
          case 9:
            { return new Symbol(sym.MAYORQ,yycolumn,yyline,yytext());
            }
            // fall through
          case 98: break;
          case 10:
            { return new Symbol(sym.CORCHETEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 99: break;
          case 11:
            { return new Symbol(sym.CORCHETEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 100: break;
          case 12:
            { return new Symbol(sym.LLAVEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 101: break;
          case 13:
            { return new Symbol(sym.LLAVEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 102: break;
          case 14:
            { yybegin(YYINITIAL); return new Symbol(sym.COMILLAS, yycolumn, yyline, yytext());
            }
            // fall through
          case 103: break;
          case 15:
            { return new Symbol(sym.ID,yycolumn,yyline,yytext());
            }
            // fall through
          case 104: break;
          case 16:
            { yybegin(RESTRICCION); return new Symbol(sym.CORCHETEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 105: break;
          case 17:
            { yybegin(RESTRICCION); return new Symbol(sym.APOSTROFE, yycolumn, yyline, yytext());
            }
            // fall through
          case 106: break;
          case 18:
            { return new Symbol(sym.NUMERO, yycolumn, yyline, yytext());
            }
            // fall through
          case 107: break;
          case 19:
            { return new Symbol(sym.OR,yycolumn,yyline,yytext());
            }
            // fall through
          case 108: break;
          case 20:
            { yybegin(STRING); return new Symbol(sym.APOSTROFE, yycolumn, yyline, yytext());
            }
            // fall through
          case 109: break;
          case 21:
            { return new Symbol(sym.PARENTESISA, yycolumn, yyline, yytext());
            }
            // fall through
          case 110: break;
          case 22:
            { return new Symbol(sym.PARENTESISC, yycolumn, yyline, yytext());
            }
            // fall through
          case 111: break;
          case 23:
            { return new Symbol(sym.IGUAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 112: break;
          case 24:
            { yybegin(CONSULTA);return new Symbol(sym.CORCHETEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 113: break;
          case 25:
            { return new Symbol(sym.FINE,yycolumn,yyline,yytext());
            }
            // fall through
          case 114: break;
          case 26:
            { return new Symbol(sym.INICIOE,yycolumn,yyline,yytext());
            }
            // fall through
          case 115: break;
          case 27:
            { return new Symbol(sym.DE,yycolumn,yyline,yytext());
            }
            // fall through
          case 116: break;
          case 28:
            { return new Symbol(sym.TITULO, yycolumn, yyline, yytext());
            }
            // fall through
          case 117: break;
          case 29:
            { return new Symbol(sym.IDP,yycolumn,yyline,yytext());
            }
            // fall through
          case 118: break;
          case 30:
            { return new Symbol(sym.BOOL,yycolumn,yyline,yytext());
            }
            // fall through
          case 119: break;
          case 31:
            { return new Symbol(sym.DEC, yycolumn,yyline,yytext());
            }
            // fall through
          case 120: break;
          case 32:
            { return new Symbol(sym.MENORIGUAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 121: break;
          case 33:
            { return new Symbol(sym.MAYORIGUAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 122: break;
          case 34:
            { return new Symbol(sym.OROP,yycolumn,yyline,yytext());
            }
            // fall through
          case 123: break;
          case 35:
            { return new Symbol(sym.URLC,yycolumn,yyline,yytext());
            }
            // fall through
          case 124: break;
          case 36:
            { return new Symbol(sym.AND,yycolumn,yyline,yytext());
            }
            // fall through
          case 125: break;
          case 37:
            { return new Symbol(sym.NOT,yycolumn,yyline,yytext());
            }
            // fall through
          case 126: break;
          case 38:
            { return new Symbol(sym.TEMA,yycolumn,yyline,yytext());
            }
            // fall through
          case 127: break;
          case 39:
            { return new Symbol(sym.TEMAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 128: break;
          case 40:
            { return new Symbol(sym.WHERE,yycolumn,yyline,yytext());
            }
            // fall through
          case 129: break;
          case 41:
            { return new Symbol(sym.CLASEBOTON,yycolumn,yyline,yytext());
            }
            // fall through
          case 130: break;
          case 42:
            { return new Symbol(sym.CLASE,yycolumn,yyline,yytext());
            }
            // fall through
          case 131: break;
          case 43:
            { return new Symbol(sym.CLASEOPCIONES,yycolumn,yyline,yytext());
            }
            // fall through
          case 132: break;
          case 44:
            { return new Symbol(sym.FILAS,yycolumn,yyline,yytext());
            }
            // fall through
          case 133: break;
          case 45:
            { return new Symbol(sym.ALINEA,yycolumn,yyline,yytext());
            }
            // fall through
          case 134: break;
          case 46:
            { return new Symbol(sym.CLASEIMAGEN,yycolumn,yyline,yytext());
            }
            // fall through
          case 135: break;
          case 47:
            { return new Symbol(sym.INDICEC,yycolumn,yyline,yytext());
            }
            // fall through
          case 136: break;
          case 48:
            { return new Symbol(sym.NOMBREP,yycolumn,yyline,yytext());
            }
            // fall through
          case 137: break;
          case 49:
            { return new Symbol(sym.TITULOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 138: break;
          case 50:
            { return new Symbol(sym.CLASENORMAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 139: break;
          case 51:
            { return new Symbol(sym.USUARIOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 140: break;
          case 52:
            { return new Symbol(sym.URL, yycolumn,yyline,yytext());
            }
            // fall through
          case 141: break;
          case 53:
            { return new Symbol(sym.COLUMNAS,yycolumn,yyline,yytext());
            }
            // fall through
          case 142: break;
          case 54:
            { return new Symbol(sym.OPCIONES,yycolumn,yyline,yytext());
            }
            // fall through
          case 143: break;
          case 55:
            { return new Symbol(sym.CONTRAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 144: break;
          case 56:
            { return new Symbol(sym.CONSULTASP,yycolumn,yyline,yytext());
            }
            // fall through
          case 145: break;
          case 57:
            { return new Symbol(sym.REQUERIDO,yycolumn,yyline,yytext());
            }
            // fall through
          case 146: break;
          case 58:
            { return new Symbol(sym.FECHA,yycolumn,yyline,yytext());
            }
            // fall through
          case 147: break;
          case 59:
            { return new Symbol(sym.ALINEAC,yycolumn,yyline,yytext());
            }
            // fall through
          case 148: break;
          case 60:
            { return new Symbol(sym.CLASEAREA,yycolumn,yyline,yytext());
            }
            // fall through
          case 149: break;
          case 61:
            { return new Symbol(sym.NOCONSULTA,yycolumn,yyline,yytext());
            }
            // fall through
          case 150: break;
          case 62:
            { return new Symbol(sym.FORMULARIOC,yycolumn,yyline,yytext());
            }
            // fall through
          case 151: break;
          case 63:
            { return new Symbol(sym.NOMBREC,yycolumn,yyline,yytext());
            }
            // fall through
          case 152: break;
          case 64:
            { return new Symbol(sym.FINS,yycolumn,yyline,yytext());
            }
            // fall through
          case 153: break;
          case 65:
            { return new Symbol(sym.CREARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 154: break;
          case 66:
            { return new Symbol(sym.LOGINU,yycolumn,yyline,yytext());
            }
            // fall through
          case 155: break;
          case 67:
            { return new Symbol(sym.TEXTOVC,yycolumn,yyline,yytext());
            }
            // fall through
          case 156: break;
          case 68:
            { return new Symbol(sym.USUARIONP,yycolumn,yyline,yytext());
            }
            // fall through
          case 157: break;
          case 69:
            { return new Symbol(sym.INICIOS, yycolumn, yyline, yytext());
            }
            // fall through
          case 158: break;
          case 70:
            { return new Symbol(sym.FECHACP,yycolumn,yyline,yytext());
            }
            // fall through
          case 159: break;
          case 71:
            { return new Symbol(sym.NUEVOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 160: break;
          case 72:
            { yybegin(CONSULTA); return new Symbol(sym.SELECT,yycolumn,yyline,yytext());
            }
            // fall through
          case 161: break;
          case 73:
            { return new Symbol(sym.FINSOLICITUDES, yycolumn, yyline, yytext());
            }
            // fall through
          case 162: break;
          case 74:
            { return new Symbol(sym.SOLICITUDESP, yycolumn, yyline, yytext());
            }
            // fall through
          case 163: break;
          case 75:
            { return new Symbol(sym.CONSULTARD,yycolumn,yyline,yytext());
            }
            // fall through
          case 164: break;
          case 76:
            { return new Symbol(sym.USUARIOAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 165: break;
          case 77:
            { return new Symbol(sym.ELIMINARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 166: break;
          case 78:
            { return new Symbol(sym.NUEVOFP,yycolumn,yyline,yytext());
            }
            // fall through
          case 167: break;
          case 79:
            { return new Symbol(sym.USUARIOCP,yycolumn,yyline,yytext());
            }
            // fall through
          case 168: break;
          case 80:
            { return new Symbol(sym.MODIFICARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 169: break;
          case 81:
            { return new Symbol(sym.AGREGARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 170: break;
          case 82:
            { return new Symbol(sym.FECHAMP,yycolumn,yyline,yytext());
            }
            // fall through
          case 171: break;
          case 83:
            { return new Symbol(sym.ELIMINARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 172: break;
          case 84:
            { return new Symbol(sym.ELIMINARF,yycolumn,yyline,yytext());
            }
            // fall through
          case 173: break;
          case 85:
            { return new Symbol(sym.CREDENCIALES,yycolumn,yyline,yytext());
            }
            // fall through
          case 174: break;
          case 86:
            { return new Symbol(sym.MODIFICARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 175: break;
          case 87:
            { return new Symbol(sym.MODIFICARF,yycolumn,yyline,yytext());
            }
            // fall through
          case 176: break;
          case 88:
            { return new Symbol(sym.PARAMC,yycolumn,yyline,yytext());
            }
            // fall through
          case 177: break;
          case 89:
            { return new Symbol(sym.PARAMF,yycolumn,yyline,yytext());
            }
            // fall through
          case 178: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
